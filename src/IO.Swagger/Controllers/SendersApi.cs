/*
 * ONESPAN SIGN API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.51
 * Contact: support@onespan.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class SendersApiController : ControllerBase
    { 
        /// <summary>
        /// Retrieves a list of the users in an account.
        /// </summary>
        /// <remarks>Retrieves a list of the users in an account. Optional query parameters can be used to filter the list. By default, only one sender is retrieved. To retrieve additional users you must modify the “to” and “from” parameters, where each number in the parameter corresponds to a user. For example: to &#x3D; 3 from &#x3D; 10 Will return users 3 to 10 in the user list.</remarks>
        /// <param name="search">Any text which is going to be used in conjunction with the searchtype if provided</param>
        /// <param name="from">The first record that will be returned. Useful for pagination.</param>
        /// <param name="to">The last record that will be returned. Useful for pagination.</param>
        /// <param name="dir">The direction according to which the data will be sorted. &#x27;asc&#x27; for ascending and &#x27;desc&#x27; for descending.</param>
        /// <param name="roleId">The unique role id for a category of senders.</param>
        /// <response code="200">OK</response>
        /// <response code="401">Not Authorized</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/api/account/senders")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiAccountSendersGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "OK")]
        [SwaggerResponse(statusCode: 401, type: typeof(DefaultError), description: "Not Authorized")]
        [SwaggerResponse(statusCode: 0, type: typeof(DefaultError), description: "Unexpected error")]
        public virtual IActionResult ApiAccountSendersGet([FromQuery]string search, [FromQuery]int? from, [FromQuery]int? to, [FromQuery]string dir, [FromQuery]string roleId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse200));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(DefaultError));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(DefaultError));
            string exampleJson = null;
            exampleJson = "{\n  \"count\" : 0,\n  \"results\" : [ {\n    \"lastName\" : \"lastName\",\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"signature\" : {\n      \"handdrawn\" : \"handdrawn\",\n      \"textual\" : {\n        \"color\" : \"color\",\n        \"font\" : \"font\"\n      }\n    },\n    \"specialTypes\" : [ \"NOTARY\", \"NOTARY\" ],\n    \"language\" : \"language\",\n    \"type\" : \"REGULAR\",\n    \"title\" : \"title\",\n    \"memberships\" : [ {\n      \"groupName\" : \"groupName\",\n      \"groupId\" : \"groupId\",\n      \"memberType\" : \"REGULAR\"\n    }, {\n      \"groupName\" : \"groupName\",\n      \"groupId\" : \"groupId\",\n      \"memberType\" : \"REGULAR\"\n    } ],\n    \"professionalIdentityFields\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ null, null ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"type\" : \"type\",\n      \"category\" : \"category\",\n      \"value\" : \"value\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ null, null ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"type\" : \"type\",\n      \"category\" : \"category\",\n      \"value\" : \"value\"\n    } ],\n    \"userCustomFields\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\"\n    } ],\n    \"company\" : \"company\",\n    \"id\" : \"id\",\n    \"locked\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"email\" : \"email\",\n    \"address\" : {\n      \"zipcode\" : \"zipcode\",\n      \"country\" : \"country\",\n      \"city\" : \"city\",\n      \"address2\" : \"address2\",\n      \"address1\" : \"address1\",\n      \"state\" : \"state\"\n    },\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"firstName\" : \"firstName\",\n    \"external\" : {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"provider\" : \"provider\",\n      \"id\" : \"id\",\n      \"providerName\" : \"providerName\"\n    },\n    \"phone\" : \"phone\",\n    \"name\" : \"name\",\n    \"timezoneId\" : \"timezoneId\",\n    \"hasDelegates\" : true,\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"account\" : {\n      \"owner\" : \"owner\",\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"customFields\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"translations\" : [ {\n          \"data\" : {\n            \"key\" : { }\n          },\n          \"name\" : \"name\",\n          \"description\" : \"description\",\n          \"language\" : \"language\",\n          \"id\" : \"id\"\n        }, {\n          \"data\" : {\n            \"key\" : { }\n          },\n          \"name\" : \"name\",\n          \"description\" : \"description\",\n          \"language\" : \"language\",\n          \"id\" : \"id\"\n        } ],\n        \"name\" : \"name\",\n        \"id\" : \"id\",\n        \"value\" : \"value\",\n        \"required\" : true\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"translations\" : [ {\n          \"data\" : {\n            \"key\" : { }\n          },\n          \"name\" : \"name\",\n          \"description\" : \"description\",\n          \"language\" : \"language\",\n          \"id\" : \"id\"\n        }, {\n          \"data\" : {\n            \"key\" : { }\n          },\n          \"name\" : \"name\",\n          \"description\" : \"description\",\n          \"language\" : \"language\",\n          \"id\" : \"id\"\n        } ],\n        \"name\" : \"name\",\n        \"id\" : \"id\",\n        \"value\" : \"value\",\n        \"required\" : true\n      } ],\n      \"logoUrl\" : \"logoUrl\",\n      \"licenses\" : [ {\n        \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"transactions\" : [ {\n          \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"price\" : {\n            \"amount\" : 0,\n            \"currency\" : {\n              \"data\" : {\n                \"key\" : { }\n              },\n              \"name\" : \"name\",\n              \"id\" : \"id\"\n            }\n          },\n          \"creditCard\" : {\n            \"number\" : \"number\",\n            \"cvv\" : \"cvv\",\n            \"name\" : \"name\",\n            \"expiration\" : {\n              \"month\" : 1,\n              \"year\" : 6\n            },\n            \"type\" : \"type\"\n          }\n        }, {\n          \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"price\" : {\n            \"amount\" : 0,\n            \"currency\" : {\n              \"data\" : {\n                \"key\" : { }\n              },\n              \"name\" : \"name\",\n              \"id\" : \"id\"\n            }\n          },\n          \"creditCard\" : {\n            \"number\" : \"number\",\n            \"cvv\" : \"cvv\",\n            \"name\" : \"name\",\n            \"expiration\" : {\n              \"month\" : 1,\n              \"year\" : 6\n            },\n            \"type\" : \"type\"\n          }\n        } ],\n        \"plan\" : {\n          \"features\" : {\n            \"key\" : { }\n          },\n          \"quotas\" : [ {\n            \"scope\" : \"SENDER\",\n            \"limit\" : 5,\n            \"cycle\" : \"DAY\",\n            \"target\" : \"SIGNER\"\n          }, {\n            \"scope\" : \"SENDER\",\n            \"limit\" : 5,\n            \"cycle\" : \"DAY\",\n            \"target\" : \"SIGNER\"\n          } ],\n          \"original\" : \"original\",\n          \"data\" : {\n            \"key\" : { }\n          },\n          \"contract\" : \"DAY\",\n          \"name\" : \"name\",\n          \"description\" : \"description\",\n          \"id\" : \"id\",\n          \"freeCycles\" : {\n            \"count\" : 5,\n            \"cycle\" : \"DAY\"\n          },\n          \"cycle\" : \"DAY\",\n          \"group\" : \"group\"\n        },\n        \"status\" : \"ACTIVE\"\n      }, {\n        \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"transactions\" : [ {\n          \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"price\" : {\n            \"amount\" : 0,\n            \"currency\" : {\n              \"data\" : {\n                \"key\" : { }\n              },\n              \"name\" : \"name\",\n              \"id\" : \"id\"\n            }\n          },\n          \"creditCard\" : {\n            \"number\" : \"number\",\n            \"cvv\" : \"cvv\",\n            \"name\" : \"name\",\n            \"expiration\" : {\n              \"month\" : 1,\n              \"year\" : 6\n            },\n            \"type\" : \"type\"\n          }\n        }, {\n          \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"price\" : {\n            \"amount\" : 0,\n            \"currency\" : {\n              \"data\" : {\n                \"key\" : { }\n              },\n              \"name\" : \"name\",\n              \"id\" : \"id\"\n            }\n          },\n          \"creditCard\" : {\n            \"number\" : \"number\",\n            \"cvv\" : \"cvv\",\n            \"name\" : \"name\",\n            \"expiration\" : {\n              \"month\" : 1,\n              \"year\" : 6\n            },\n            \"type\" : \"type\"\n          }\n        } ],\n        \"plan\" : {\n          \"features\" : {\n            \"key\" : { }\n          },\n          \"quotas\" : [ {\n            \"scope\" : \"SENDER\",\n            \"limit\" : 5,\n            \"cycle\" : \"DAY\",\n            \"target\" : \"SIGNER\"\n          }, {\n            \"scope\" : \"SENDER\",\n            \"limit\" : 5,\n            \"cycle\" : \"DAY\",\n            \"target\" : \"SIGNER\"\n          } ],\n          \"original\" : \"original\",\n          \"data\" : {\n            \"key\" : { }\n          },\n          \"contract\" : \"DAY\",\n          \"name\" : \"name\",\n          \"description\" : \"description\",\n          \"id\" : \"id\",\n          \"freeCycles\" : {\n            \"count\" : 5,\n            \"cycle\" : \"DAY\"\n          },\n          \"cycle\" : \"DAY\",\n          \"group\" : \"group\"\n        },\n        \"status\" : \"ACTIVE\"\n      } ],\n      \"logoAltTextKey\" : \"logoAltTextKey\",\n      \"name\" : \"name\",\n      \"timezoneId\" : \"timezoneId\",\n      \"company\" : {\n        \"address\" : {\n          \"zipcode\" : \"zipcode\",\n          \"country\" : \"country\",\n          \"city\" : \"city\",\n          \"address2\" : \"address2\",\n          \"address1\" : \"address1\",\n          \"state\" : \"state\"\n        },\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"id\" : \"id\",\n      \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"providers\" : {\n        \"documents\" : [ {\n          \"data\" : {\n            \"key\" : { }\n          },\n          \"provides\" : \"provides\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"data\" : {\n            \"key\" : { }\n          },\n          \"provides\" : \"provides\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"users\" : [ null, null ]\n      }\n    },\n    \"status\" : \"INVITED\",\n    \"activated\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"lastName\" : \"lastName\",\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"signature\" : {\n      \"handdrawn\" : \"handdrawn\",\n      \"textual\" : {\n        \"color\" : \"color\",\n        \"font\" : \"font\"\n      }\n    },\n    \"specialTypes\" : [ \"NOTARY\", \"NOTARY\" ],\n    \"language\" : \"language\",\n    \"type\" : \"REGULAR\",\n    \"title\" : \"title\",\n    \"memberships\" : [ {\n      \"groupName\" : \"groupName\",\n      \"groupId\" : \"groupId\",\n      \"memberType\" : \"REGULAR\"\n    }, {\n      \"groupName\" : \"groupName\",\n      \"groupId\" : \"groupId\",\n      \"memberType\" : \"REGULAR\"\n    } ],\n    \"professionalIdentityFields\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ null, null ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"type\" : \"type\",\n      \"category\" : \"category\",\n      \"value\" : \"value\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ null, null ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"type\" : \"type\",\n      \"category\" : \"category\",\n      \"value\" : \"value\"\n    } ],\n    \"userCustomFields\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\"\n    } ],\n    \"company\" : \"company\",\n    \"id\" : \"id\",\n    \"locked\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"email\" : \"email\",\n    \"address\" : {\n      \"zipcode\" : \"zipcode\",\n      \"country\" : \"country\",\n      \"city\" : \"city\",\n      \"address2\" : \"address2\",\n      \"address1\" : \"address1\",\n      \"state\" : \"state\"\n    },\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"firstName\" : \"firstName\",\n    \"external\" : {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"provider\" : \"provider\",\n      \"id\" : \"id\",\n      \"providerName\" : \"providerName\"\n    },\n    \"phone\" : \"phone\",\n    \"name\" : \"name\",\n    \"timezoneId\" : \"timezoneId\",\n    \"hasDelegates\" : true,\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"account\" : {\n      \"owner\" : \"owner\",\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"customFields\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"translations\" : [ {\n          \"data\" : {\n            \"key\" : { }\n          },\n          \"name\" : \"name\",\n          \"description\" : \"description\",\n          \"language\" : \"language\",\n          \"id\" : \"id\"\n        }, {\n          \"data\" : {\n            \"key\" : { }\n          },\n          \"name\" : \"name\",\n          \"description\" : \"description\",\n          \"language\" : \"language\",\n          \"id\" : \"id\"\n        } ],\n        \"name\" : \"name\",\n        \"id\" : \"id\",\n        \"value\" : \"value\",\n        \"required\" : true\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"translations\" : [ {\n          \"data\" : {\n            \"key\" : { }\n          },\n          \"name\" : \"name\",\n          \"description\" : \"description\",\n          \"language\" : \"language\",\n          \"id\" : \"id\"\n        }, {\n          \"data\" : {\n            \"key\" : { }\n          },\n          \"name\" : \"name\",\n          \"description\" : \"description\",\n          \"language\" : \"language\",\n          \"id\" : \"id\"\n        } ],\n        \"name\" : \"name\",\n        \"id\" : \"id\",\n        \"value\" : \"value\",\n        \"required\" : true\n      } ],\n      \"logoUrl\" : \"logoUrl\",\n      \"licenses\" : [ {\n        \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"transactions\" : [ {\n          \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"price\" : {\n            \"amount\" : 0,\n            \"currency\" : {\n              \"data\" : {\n                \"key\" : { }\n              },\n              \"name\" : \"name\",\n              \"id\" : \"id\"\n            }\n          },\n          \"creditCard\" : {\n            \"number\" : \"number\",\n            \"cvv\" : \"cvv\",\n            \"name\" : \"name\",\n            \"expiration\" : {\n              \"month\" : 1,\n              \"year\" : 6\n            },\n            \"type\" : \"type\"\n          }\n        }, {\n          \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"price\" : {\n            \"amount\" : 0,\n            \"currency\" : {\n              \"data\" : {\n                \"key\" : { }\n              },\n              \"name\" : \"name\",\n              \"id\" : \"id\"\n            }\n          },\n          \"creditCard\" : {\n            \"number\" : \"number\",\n            \"cvv\" : \"cvv\",\n            \"name\" : \"name\",\n            \"expiration\" : {\n              \"month\" : 1,\n              \"year\" : 6\n            },\n            \"type\" : \"type\"\n          }\n        } ],\n        \"plan\" : {\n          \"features\" : {\n            \"key\" : { }\n          },\n          \"quotas\" : [ {\n            \"scope\" : \"SENDER\",\n            \"limit\" : 5,\n            \"cycle\" : \"DAY\",\n            \"target\" : \"SIGNER\"\n          }, {\n            \"scope\" : \"SENDER\",\n            \"limit\" : 5,\n            \"cycle\" : \"DAY\",\n            \"target\" : \"SIGNER\"\n          } ],\n          \"original\" : \"original\",\n          \"data\" : {\n            \"key\" : { }\n          },\n          \"contract\" : \"DAY\",\n          \"name\" : \"name\",\n          \"description\" : \"description\",\n          \"id\" : \"id\",\n          \"freeCycles\" : {\n            \"count\" : 5,\n            \"cycle\" : \"DAY\"\n          },\n          \"cycle\" : \"DAY\",\n          \"group\" : \"group\"\n        },\n        \"status\" : \"ACTIVE\"\n      }, {\n        \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"transactions\" : [ {\n          \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"price\" : {\n            \"amount\" : 0,\n            \"currency\" : {\n              \"data\" : {\n                \"key\" : { }\n              },\n              \"name\" : \"name\",\n              \"id\" : \"id\"\n            }\n          },\n          \"creditCard\" : {\n            \"number\" : \"number\",\n            \"cvv\" : \"cvv\",\n            \"name\" : \"name\",\n            \"expiration\" : {\n              \"month\" : 1,\n              \"year\" : 6\n            },\n            \"type\" : \"type\"\n          }\n        }, {\n          \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"price\" : {\n            \"amount\" : 0,\n            \"currency\" : {\n              \"data\" : {\n                \"key\" : { }\n              },\n              \"name\" : \"name\",\n              \"id\" : \"id\"\n            }\n          },\n          \"creditCard\" : {\n            \"number\" : \"number\",\n            \"cvv\" : \"cvv\",\n            \"name\" : \"name\",\n            \"expiration\" : {\n              \"month\" : 1,\n              \"year\" : 6\n            },\n            \"type\" : \"type\"\n          }\n        } ],\n        \"plan\" : {\n          \"features\" : {\n            \"key\" : { }\n          },\n          \"quotas\" : [ {\n            \"scope\" : \"SENDER\",\n            \"limit\" : 5,\n            \"cycle\" : \"DAY\",\n            \"target\" : \"SIGNER\"\n          }, {\n            \"scope\" : \"SENDER\",\n            \"limit\" : 5,\n            \"cycle\" : \"DAY\",\n            \"target\" : \"SIGNER\"\n          } ],\n          \"original\" : \"original\",\n          \"data\" : {\n            \"key\" : { }\n          },\n          \"contract\" : \"DAY\",\n          \"name\" : \"name\",\n          \"description\" : \"description\",\n          \"id\" : \"id\",\n          \"freeCycles\" : {\n            \"count\" : 5,\n            \"cycle\" : \"DAY\"\n          },\n          \"cycle\" : \"DAY\",\n          \"group\" : \"group\"\n        },\n        \"status\" : \"ACTIVE\"\n      } ],\n      \"logoAltTextKey\" : \"logoAltTextKey\",\n      \"name\" : \"name\",\n      \"timezoneId\" : \"timezoneId\",\n      \"company\" : {\n        \"address\" : {\n          \"zipcode\" : \"zipcode\",\n          \"country\" : \"country\",\n          \"city\" : \"city\",\n          \"address2\" : \"address2\",\n          \"address1\" : \"address1\",\n          \"state\" : \"state\"\n        },\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      },\n      \"id\" : \"id\",\n      \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"providers\" : {\n        \"documents\" : [ {\n          \"data\" : {\n            \"key\" : { }\n          },\n          \"provides\" : \"provides\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        }, {\n          \"data\" : {\n            \"key\" : { }\n          },\n          \"provides\" : \"provides\",\n          \"name\" : \"name\",\n          \"id\" : \"id\"\n        } ],\n        \"users\" : [ null, null ]\n      }\n    },\n    \"status\" : \"INVITED\",\n    \"activated\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
                        : default(InlineResponse200);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates a new user in an account.
        /// </summary>
        /// <remarks>Creates a new user in an account.</remarks>
        /// <param name="body">The account payload.</param>
        /// <response code="200">OK</response>
        /// <response code="401">Not Authorized</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/account/senders")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiAccountSendersPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(Sender), description: "OK")]
        [SwaggerResponse(statusCode: 401, type: typeof(DefaultError), description: "Not Authorized")]
        [SwaggerResponse(statusCode: 0, type: typeof(DefaultError), description: "Unexpected error")]
        public virtual IActionResult ApiAccountSendersPost([FromBody]Sender body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Sender));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(DefaultError));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(DefaultError));
            string exampleJson = null;
            exampleJson = "{\n  \"lastName\" : \"lastName\",\n  \"data\" : {\n    \"key\" : { }\n  },\n  \"signature\" : {\n    \"handdrawn\" : \"handdrawn\",\n    \"textual\" : {\n      \"color\" : \"color\",\n      \"font\" : \"font\"\n    }\n  },\n  \"specialTypes\" : [ \"NOTARY\", \"NOTARY\" ],\n  \"language\" : \"language\",\n  \"type\" : \"REGULAR\",\n  \"title\" : \"title\",\n  \"memberships\" : [ {\n    \"groupName\" : \"groupName\",\n    \"groupId\" : \"groupId\",\n    \"memberType\" : \"REGULAR\"\n  }, {\n    \"groupName\" : \"groupName\",\n    \"groupId\" : \"groupId\",\n    \"memberType\" : \"REGULAR\"\n  } ],\n  \"professionalIdentityFields\" : [ {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ null, null ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"type\" : \"type\",\n    \"category\" : \"category\",\n    \"value\" : \"value\"\n  }, {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ null, null ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"type\" : \"type\",\n    \"category\" : \"category\",\n    \"value\" : \"value\"\n  } ],\n  \"userCustomFields\" : [ {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    } ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"value\" : \"value\"\n  }, {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    } ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"value\" : \"value\"\n  } ],\n  \"company\" : \"company\",\n  \"id\" : \"id\",\n  \"locked\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"email\" : \"email\",\n  \"address\" : {\n    \"zipcode\" : \"zipcode\",\n    \"country\" : \"country\",\n    \"city\" : \"city\",\n    \"address2\" : \"address2\",\n    \"address1\" : \"address1\",\n    \"state\" : \"state\"\n  },\n  \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"firstName\" : \"firstName\",\n  \"external\" : {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"provider\" : \"provider\",\n    \"id\" : \"id\",\n    \"providerName\" : \"providerName\"\n  },\n  \"phone\" : \"phone\",\n  \"name\" : \"name\",\n  \"timezoneId\" : \"timezoneId\",\n  \"hasDelegates\" : true,\n  \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"account\" : {\n    \"owner\" : \"owner\",\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"customFields\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\",\n      \"required\" : true\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\",\n      \"required\" : true\n    } ],\n    \"logoUrl\" : \"logoUrl\",\n    \"licenses\" : [ {\n      \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"transactions\" : [ {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      }, {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      } ],\n      \"plan\" : {\n        \"features\" : {\n          \"key\" : { }\n        },\n        \"quotas\" : [ {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        }, {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        } ],\n        \"original\" : \"original\",\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"contract\" : \"DAY\",\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : \"id\",\n        \"freeCycles\" : {\n          \"count\" : 5,\n          \"cycle\" : \"DAY\"\n        },\n        \"cycle\" : \"DAY\",\n        \"group\" : \"group\"\n      },\n      \"status\" : \"ACTIVE\"\n    }, {\n      \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"transactions\" : [ {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      }, {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      } ],\n      \"plan\" : {\n        \"features\" : {\n          \"key\" : { }\n        },\n        \"quotas\" : [ {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        }, {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        } ],\n        \"original\" : \"original\",\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"contract\" : \"DAY\",\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : \"id\",\n        \"freeCycles\" : {\n          \"count\" : 5,\n          \"cycle\" : \"DAY\"\n        },\n        \"cycle\" : \"DAY\",\n        \"group\" : \"group\"\n      },\n      \"status\" : \"ACTIVE\"\n    } ],\n    \"logoAltTextKey\" : \"logoAltTextKey\",\n    \"name\" : \"name\",\n    \"timezoneId\" : \"timezoneId\",\n    \"company\" : {\n      \"address\" : {\n        \"zipcode\" : \"zipcode\",\n        \"country\" : \"country\",\n        \"city\" : \"city\",\n        \"address2\" : \"address2\",\n        \"address1\" : \"address1\",\n        \"state\" : \"state\"\n      },\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"id\" : \"id\"\n    },\n    \"id\" : \"id\",\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"providers\" : {\n      \"documents\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"provides\" : \"provides\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"provides\" : \"provides\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      } ],\n      \"users\" : [ null, null ]\n    }\n  },\n  \"status\" : \"INVITED\",\n  \"activated\" : \"2000-01-23T04:56:07.000+00:00\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Sender>(exampleJson)
                        : default(Sender);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Deletes a Sender from the account.
        /// </summary>
        /// <remarks>Deletes a specified Sender from an account.</remarks>
        /// <param name="senderId">The unique sender id.</param>
        /// <response code="200">OK</response>
        /// <response code="401">Not Authorized</response>
        /// <response code="404">The specified resource was not found</response>
        /// <response code="0">Unexpected error</response>
        [HttpDelete]
        [Route("/api/account/senders/{senderId}")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiAccountSendersSenderIdDelete")]
        [SwaggerResponse(statusCode: 401, type: typeof(DefaultError), description: "Not Authorized")]
        [SwaggerResponse(statusCode: 404, type: typeof(DefaultError), description: "The specified resource was not found")]
        [SwaggerResponse(statusCode: 0, type: typeof(DefaultError), description: "Unexpected error")]
        public virtual IActionResult ApiAccountSendersSenderIdDelete([FromRoute][Required]string senderId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(DefaultError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(DefaultError));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(DefaultError));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Retrieves detailed Account information about a user.
        /// </summary>
        /// <remarks>Retrieves detailed Account information about a specified user.</remarks>
        /// <param name="senderId">The unique sender id.</param>
        /// <response code="200">OK</response>
        /// <response code="401">Not Authorized</response>
        /// <response code="404">The specified resource was not found</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/api/account/senders/{senderId}")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiAccountSendersSenderIdGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(Sender), description: "OK")]
        [SwaggerResponse(statusCode: 401, type: typeof(DefaultError), description: "Not Authorized")]
        [SwaggerResponse(statusCode: 404, type: typeof(DefaultError), description: "The specified resource was not found")]
        [SwaggerResponse(statusCode: 0, type: typeof(DefaultError), description: "Unexpected error")]
        public virtual IActionResult ApiAccountSendersSenderIdGet([FromRoute][Required]string senderId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Sender));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(DefaultError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(DefaultError));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(DefaultError));
            string exampleJson = null;
            exampleJson = "{\n  \"lastName\" : \"lastName\",\n  \"data\" : {\n    \"key\" : { }\n  },\n  \"signature\" : {\n    \"handdrawn\" : \"handdrawn\",\n    \"textual\" : {\n      \"color\" : \"color\",\n      \"font\" : \"font\"\n    }\n  },\n  \"specialTypes\" : [ \"NOTARY\", \"NOTARY\" ],\n  \"language\" : \"language\",\n  \"type\" : \"REGULAR\",\n  \"title\" : \"title\",\n  \"memberships\" : [ {\n    \"groupName\" : \"groupName\",\n    \"groupId\" : \"groupId\",\n    \"memberType\" : \"REGULAR\"\n  }, {\n    \"groupName\" : \"groupName\",\n    \"groupId\" : \"groupId\",\n    \"memberType\" : \"REGULAR\"\n  } ],\n  \"professionalIdentityFields\" : [ {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ null, null ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"type\" : \"type\",\n    \"category\" : \"category\",\n    \"value\" : \"value\"\n  }, {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ null, null ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"type\" : \"type\",\n    \"category\" : \"category\",\n    \"value\" : \"value\"\n  } ],\n  \"userCustomFields\" : [ {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    } ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"value\" : \"value\"\n  }, {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    } ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"value\" : \"value\"\n  } ],\n  \"company\" : \"company\",\n  \"id\" : \"id\",\n  \"locked\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"email\" : \"email\",\n  \"address\" : {\n    \"zipcode\" : \"zipcode\",\n    \"country\" : \"country\",\n    \"city\" : \"city\",\n    \"address2\" : \"address2\",\n    \"address1\" : \"address1\",\n    \"state\" : \"state\"\n  },\n  \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"firstName\" : \"firstName\",\n  \"external\" : {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"provider\" : \"provider\",\n    \"id\" : \"id\",\n    \"providerName\" : \"providerName\"\n  },\n  \"phone\" : \"phone\",\n  \"name\" : \"name\",\n  \"timezoneId\" : \"timezoneId\",\n  \"hasDelegates\" : true,\n  \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"account\" : {\n    \"owner\" : \"owner\",\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"customFields\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\",\n      \"required\" : true\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\",\n      \"required\" : true\n    } ],\n    \"logoUrl\" : \"logoUrl\",\n    \"licenses\" : [ {\n      \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"transactions\" : [ {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      }, {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      } ],\n      \"plan\" : {\n        \"features\" : {\n          \"key\" : { }\n        },\n        \"quotas\" : [ {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        }, {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        } ],\n        \"original\" : \"original\",\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"contract\" : \"DAY\",\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : \"id\",\n        \"freeCycles\" : {\n          \"count\" : 5,\n          \"cycle\" : \"DAY\"\n        },\n        \"cycle\" : \"DAY\",\n        \"group\" : \"group\"\n      },\n      \"status\" : \"ACTIVE\"\n    }, {\n      \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"transactions\" : [ {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      }, {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      } ],\n      \"plan\" : {\n        \"features\" : {\n          \"key\" : { }\n        },\n        \"quotas\" : [ {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        }, {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        } ],\n        \"original\" : \"original\",\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"contract\" : \"DAY\",\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : \"id\",\n        \"freeCycles\" : {\n          \"count\" : 5,\n          \"cycle\" : \"DAY\"\n        },\n        \"cycle\" : \"DAY\",\n        \"group\" : \"group\"\n      },\n      \"status\" : \"ACTIVE\"\n    } ],\n    \"logoAltTextKey\" : \"logoAltTextKey\",\n    \"name\" : \"name\",\n    \"timezoneId\" : \"timezoneId\",\n    \"company\" : {\n      \"address\" : {\n        \"zipcode\" : \"zipcode\",\n        \"country\" : \"country\",\n        \"city\" : \"city\",\n        \"address2\" : \"address2\",\n        \"address1\" : \"address1\",\n        \"state\" : \"state\"\n      },\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"id\" : \"id\"\n    },\n    \"id\" : \"id\",\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"providers\" : {\n      \"documents\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"provides\" : \"provides\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"provides\" : \"provides\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      } ],\n      \"users\" : [ null, null ]\n    }\n  },\n  \"status\" : \"INVITED\",\n  \"activated\" : \"2000-01-23T04:56:07.000+00:00\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Sender>(exampleJson)
                        : default(Sender);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Invites a user to join the account.
        /// </summary>
        /// <remarks>Sends an email invitation to a user. The user will receive an invitation link and a token identifying the account.</remarks>
        /// <param name="senderId">The unique sender id.</param>
        /// <response code="200">OK</response>
        /// <response code="401">Not Authorized</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/account/senders/{senderId}/invite")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiAccountSendersSenderIdInvitePost")]
        [SwaggerResponse(statusCode: 200, type: typeof(Sender), description: "OK")]
        [SwaggerResponse(statusCode: 401, type: typeof(DefaultError), description: "Not Authorized")]
        [SwaggerResponse(statusCode: 0, type: typeof(DefaultError), description: "Unexpected error")]
        public virtual IActionResult ApiAccountSendersSenderIdInvitePost([FromRoute][Required]string senderId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Sender));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(DefaultError));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(DefaultError));
            string exampleJson = null;
            exampleJson = "{\n  \"lastName\" : \"lastName\",\n  \"data\" : {\n    \"key\" : { }\n  },\n  \"signature\" : {\n    \"handdrawn\" : \"handdrawn\",\n    \"textual\" : {\n      \"color\" : \"color\",\n      \"font\" : \"font\"\n    }\n  },\n  \"specialTypes\" : [ \"NOTARY\", \"NOTARY\" ],\n  \"language\" : \"language\",\n  \"type\" : \"REGULAR\",\n  \"title\" : \"title\",\n  \"memberships\" : [ {\n    \"groupName\" : \"groupName\",\n    \"groupId\" : \"groupId\",\n    \"memberType\" : \"REGULAR\"\n  }, {\n    \"groupName\" : \"groupName\",\n    \"groupId\" : \"groupId\",\n    \"memberType\" : \"REGULAR\"\n  } ],\n  \"professionalIdentityFields\" : [ {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ null, null ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"type\" : \"type\",\n    \"category\" : \"category\",\n    \"value\" : \"value\"\n  }, {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ null, null ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"type\" : \"type\",\n    \"category\" : \"category\",\n    \"value\" : \"value\"\n  } ],\n  \"userCustomFields\" : [ {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    } ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"value\" : \"value\"\n  }, {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    } ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"value\" : \"value\"\n  } ],\n  \"company\" : \"company\",\n  \"id\" : \"id\",\n  \"locked\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"email\" : \"email\",\n  \"address\" : {\n    \"zipcode\" : \"zipcode\",\n    \"country\" : \"country\",\n    \"city\" : \"city\",\n    \"address2\" : \"address2\",\n    \"address1\" : \"address1\",\n    \"state\" : \"state\"\n  },\n  \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"firstName\" : \"firstName\",\n  \"external\" : {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"provider\" : \"provider\",\n    \"id\" : \"id\",\n    \"providerName\" : \"providerName\"\n  },\n  \"phone\" : \"phone\",\n  \"name\" : \"name\",\n  \"timezoneId\" : \"timezoneId\",\n  \"hasDelegates\" : true,\n  \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"account\" : {\n    \"owner\" : \"owner\",\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"customFields\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\",\n      \"required\" : true\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\",\n      \"required\" : true\n    } ],\n    \"logoUrl\" : \"logoUrl\",\n    \"licenses\" : [ {\n      \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"transactions\" : [ {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      }, {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      } ],\n      \"plan\" : {\n        \"features\" : {\n          \"key\" : { }\n        },\n        \"quotas\" : [ {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        }, {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        } ],\n        \"original\" : \"original\",\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"contract\" : \"DAY\",\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : \"id\",\n        \"freeCycles\" : {\n          \"count\" : 5,\n          \"cycle\" : \"DAY\"\n        },\n        \"cycle\" : \"DAY\",\n        \"group\" : \"group\"\n      },\n      \"status\" : \"ACTIVE\"\n    }, {\n      \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"transactions\" : [ {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      }, {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      } ],\n      \"plan\" : {\n        \"features\" : {\n          \"key\" : { }\n        },\n        \"quotas\" : [ {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        }, {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        } ],\n        \"original\" : \"original\",\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"contract\" : \"DAY\",\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : \"id\",\n        \"freeCycles\" : {\n          \"count\" : 5,\n          \"cycle\" : \"DAY\"\n        },\n        \"cycle\" : \"DAY\",\n        \"group\" : \"group\"\n      },\n      \"status\" : \"ACTIVE\"\n    } ],\n    \"logoAltTextKey\" : \"logoAltTextKey\",\n    \"name\" : \"name\",\n    \"timezoneId\" : \"timezoneId\",\n    \"company\" : {\n      \"address\" : {\n        \"zipcode\" : \"zipcode\",\n        \"country\" : \"country\",\n        \"city\" : \"city\",\n        \"address2\" : \"address2\",\n        \"address1\" : \"address1\",\n        \"state\" : \"state\"\n      },\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"id\" : \"id\"\n    },\n    \"id\" : \"id\",\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"providers\" : {\n      \"documents\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"provides\" : \"provides\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"provides\" : \"provides\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      } ],\n      \"users\" : [ null, null ]\n    }\n  },\n  \"status\" : \"INVITED\",\n  \"activated\" : \"2000-01-23T04:56:07.000+00:00\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Sender>(exampleJson)
                        : default(Sender);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates a Sender&#x27;s password.
        /// </summary>
        /// <remarks>Helps users update or change their account password. Users can only modify their own password.</remarks>
        /// <param name="body">The custom field to be updated.</param>
        /// <param name="senderId">The unique sender id.</param>
        /// <param name="rawSignatureCapture">If set to true, the authograph signatures will be provided as a vector.</param>
        /// <response code="200">OK</response>
        /// <response code="400">Validation error</response>
        /// <response code="401">Not Authorized</response>
        /// <response code="403">Access Denied error</response>
        /// <response code="404">The specified resource was not found</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/account/senders/{senderId}/password")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiAccountSendersSenderIdPasswordPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(Sender), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(DefaultError), description: "Validation error")]
        [SwaggerResponse(statusCode: 401, type: typeof(DefaultError), description: "Not Authorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(DefaultError), description: "Access Denied error")]
        [SwaggerResponse(statusCode: 404, type: typeof(DefaultError), description: "The specified resource was not found")]
        [SwaggerResponse(statusCode: 0, type: typeof(DefaultError), description: "Unexpected error")]
        public virtual IActionResult ApiAccountSendersSenderIdPasswordPost([FromBody]Credentials body, [FromRoute][Required]string senderId, [FromQuery]bool? rawSignatureCapture)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Sender));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(DefaultError));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(DefaultError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(DefaultError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(DefaultError));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(DefaultError));
            string exampleJson = null;
            exampleJson = "{\n  \"lastName\" : \"lastName\",\n  \"data\" : {\n    \"key\" : { }\n  },\n  \"signature\" : {\n    \"handdrawn\" : \"handdrawn\",\n    \"textual\" : {\n      \"color\" : \"color\",\n      \"font\" : \"font\"\n    }\n  },\n  \"specialTypes\" : [ \"NOTARY\", \"NOTARY\" ],\n  \"language\" : \"language\",\n  \"type\" : \"REGULAR\",\n  \"title\" : \"title\",\n  \"memberships\" : [ {\n    \"groupName\" : \"groupName\",\n    \"groupId\" : \"groupId\",\n    \"memberType\" : \"REGULAR\"\n  }, {\n    \"groupName\" : \"groupName\",\n    \"groupId\" : \"groupId\",\n    \"memberType\" : \"REGULAR\"\n  } ],\n  \"professionalIdentityFields\" : [ {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ null, null ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"type\" : \"type\",\n    \"category\" : \"category\",\n    \"value\" : \"value\"\n  }, {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ null, null ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"type\" : \"type\",\n    \"category\" : \"category\",\n    \"value\" : \"value\"\n  } ],\n  \"userCustomFields\" : [ {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    } ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"value\" : \"value\"\n  }, {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    } ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"value\" : \"value\"\n  } ],\n  \"company\" : \"company\",\n  \"id\" : \"id\",\n  \"locked\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"email\" : \"email\",\n  \"address\" : {\n    \"zipcode\" : \"zipcode\",\n    \"country\" : \"country\",\n    \"city\" : \"city\",\n    \"address2\" : \"address2\",\n    \"address1\" : \"address1\",\n    \"state\" : \"state\"\n  },\n  \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"firstName\" : \"firstName\",\n  \"external\" : {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"provider\" : \"provider\",\n    \"id\" : \"id\",\n    \"providerName\" : \"providerName\"\n  },\n  \"phone\" : \"phone\",\n  \"name\" : \"name\",\n  \"timezoneId\" : \"timezoneId\",\n  \"hasDelegates\" : true,\n  \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"account\" : {\n    \"owner\" : \"owner\",\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"customFields\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\",\n      \"required\" : true\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\",\n      \"required\" : true\n    } ],\n    \"logoUrl\" : \"logoUrl\",\n    \"licenses\" : [ {\n      \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"transactions\" : [ {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      }, {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      } ],\n      \"plan\" : {\n        \"features\" : {\n          \"key\" : { }\n        },\n        \"quotas\" : [ {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        }, {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        } ],\n        \"original\" : \"original\",\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"contract\" : \"DAY\",\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : \"id\",\n        \"freeCycles\" : {\n          \"count\" : 5,\n          \"cycle\" : \"DAY\"\n        },\n        \"cycle\" : \"DAY\",\n        \"group\" : \"group\"\n      },\n      \"status\" : \"ACTIVE\"\n    }, {\n      \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"transactions\" : [ {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      }, {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      } ],\n      \"plan\" : {\n        \"features\" : {\n          \"key\" : { }\n        },\n        \"quotas\" : [ {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        }, {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        } ],\n        \"original\" : \"original\",\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"contract\" : \"DAY\",\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : \"id\",\n        \"freeCycles\" : {\n          \"count\" : 5,\n          \"cycle\" : \"DAY\"\n        },\n        \"cycle\" : \"DAY\",\n        \"group\" : \"group\"\n      },\n      \"status\" : \"ACTIVE\"\n    } ],\n    \"logoAltTextKey\" : \"logoAltTextKey\",\n    \"name\" : \"name\",\n    \"timezoneId\" : \"timezoneId\",\n    \"company\" : {\n      \"address\" : {\n        \"zipcode\" : \"zipcode\",\n        \"country\" : \"country\",\n        \"city\" : \"city\",\n        \"address2\" : \"address2\",\n        \"address1\" : \"address1\",\n        \"state\" : \"state\"\n      },\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"id\" : \"id\"\n    },\n    \"id\" : \"id\",\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"providers\" : {\n      \"documents\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"provides\" : \"provides\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"provides\" : \"provides\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      } ],\n      \"users\" : [ null, null ]\n    }\n  },\n  \"status\" : \"INVITED\",\n  \"activated\" : \"2000-01-23T04:56:07.000+00:00\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Sender>(exampleJson)
                        : default(Sender);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates a Sender&#x27;s details.
        /// </summary>
        /// <remarks>Updates or modifies detail information for a specified Sender.</remarks>
        /// <param name="body">The custom field to be updated.</param>
        /// <param name="senderId">The unique sender id.</param>
        /// <param name="rawSignatureCapture">If set to true, the authograph signatures will be provided as a vector.</param>
        /// <response code="200">OK</response>
        /// <response code="400">Validation error</response>
        /// <response code="401">Not Authorized</response>
        /// <response code="404">The specified resource was not found</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/account/senders/{senderId}")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiAccountSendersSenderIdPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(Sender), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(DefaultError), description: "Validation error")]
        [SwaggerResponse(statusCode: 401, type: typeof(DefaultError), description: "Not Authorized")]
        [SwaggerResponse(statusCode: 404, type: typeof(DefaultError), description: "The specified resource was not found")]
        [SwaggerResponse(statusCode: 0, type: typeof(DefaultError), description: "Unexpected error")]
        public virtual IActionResult ApiAccountSendersSenderIdPost([FromBody]Sender body, [FromRoute][Required]string senderId, [FromQuery]bool? rawSignatureCapture)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Sender));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(DefaultError));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(DefaultError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(DefaultError));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(DefaultError));
            string exampleJson = null;
            exampleJson = "{\n  \"lastName\" : \"lastName\",\n  \"data\" : {\n    \"key\" : { }\n  },\n  \"signature\" : {\n    \"handdrawn\" : \"handdrawn\",\n    \"textual\" : {\n      \"color\" : \"color\",\n      \"font\" : \"font\"\n    }\n  },\n  \"specialTypes\" : [ \"NOTARY\", \"NOTARY\" ],\n  \"language\" : \"language\",\n  \"type\" : \"REGULAR\",\n  \"title\" : \"title\",\n  \"memberships\" : [ {\n    \"groupName\" : \"groupName\",\n    \"groupId\" : \"groupId\",\n    \"memberType\" : \"REGULAR\"\n  }, {\n    \"groupName\" : \"groupName\",\n    \"groupId\" : \"groupId\",\n    \"memberType\" : \"REGULAR\"\n  } ],\n  \"professionalIdentityFields\" : [ {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ null, null ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"type\" : \"type\",\n    \"category\" : \"category\",\n    \"value\" : \"value\"\n  }, {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ null, null ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"type\" : \"type\",\n    \"category\" : \"category\",\n    \"value\" : \"value\"\n  } ],\n  \"userCustomFields\" : [ {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    } ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"value\" : \"value\"\n  }, {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    } ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"value\" : \"value\"\n  } ],\n  \"company\" : \"company\",\n  \"id\" : \"id\",\n  \"locked\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"email\" : \"email\",\n  \"address\" : {\n    \"zipcode\" : \"zipcode\",\n    \"country\" : \"country\",\n    \"city\" : \"city\",\n    \"address2\" : \"address2\",\n    \"address1\" : \"address1\",\n    \"state\" : \"state\"\n  },\n  \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"firstName\" : \"firstName\",\n  \"external\" : {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"provider\" : \"provider\",\n    \"id\" : \"id\",\n    \"providerName\" : \"providerName\"\n  },\n  \"phone\" : \"phone\",\n  \"name\" : \"name\",\n  \"timezoneId\" : \"timezoneId\",\n  \"hasDelegates\" : true,\n  \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"account\" : {\n    \"owner\" : \"owner\",\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"customFields\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\",\n      \"required\" : true\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\",\n      \"required\" : true\n    } ],\n    \"logoUrl\" : \"logoUrl\",\n    \"licenses\" : [ {\n      \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"transactions\" : [ {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      }, {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      } ],\n      \"plan\" : {\n        \"features\" : {\n          \"key\" : { }\n        },\n        \"quotas\" : [ {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        }, {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        } ],\n        \"original\" : \"original\",\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"contract\" : \"DAY\",\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : \"id\",\n        \"freeCycles\" : {\n          \"count\" : 5,\n          \"cycle\" : \"DAY\"\n        },\n        \"cycle\" : \"DAY\",\n        \"group\" : \"group\"\n      },\n      \"status\" : \"ACTIVE\"\n    }, {\n      \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"transactions\" : [ {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      }, {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      } ],\n      \"plan\" : {\n        \"features\" : {\n          \"key\" : { }\n        },\n        \"quotas\" : [ {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        }, {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        } ],\n        \"original\" : \"original\",\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"contract\" : \"DAY\",\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : \"id\",\n        \"freeCycles\" : {\n          \"count\" : 5,\n          \"cycle\" : \"DAY\"\n        },\n        \"cycle\" : \"DAY\",\n        \"group\" : \"group\"\n      },\n      \"status\" : \"ACTIVE\"\n    } ],\n    \"logoAltTextKey\" : \"logoAltTextKey\",\n    \"name\" : \"name\",\n    \"timezoneId\" : \"timezoneId\",\n    \"company\" : {\n      \"address\" : {\n        \"zipcode\" : \"zipcode\",\n        \"country\" : \"country\",\n        \"city\" : \"city\",\n        \"address2\" : \"address2\",\n        \"address1\" : \"address1\",\n        \"state\" : \"state\"\n      },\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"id\" : \"id\"\n    },\n    \"id\" : \"id\",\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"providers\" : {\n      \"documents\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"provides\" : \"provides\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"provides\" : \"provides\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      } ],\n      \"users\" : [ null, null ]\n    }\n  },\n  \"status\" : \"INVITED\",\n  \"activated\" : \"2000-01-23T04:56:07.000+00:00\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Sender>(exampleJson)
                        : default(Sender);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Resets the password for a specified user.
        /// </summary>
        /// <remarks>Sends an email to a specified user, so that they can set a new password.</remarks>
        /// <param name="senderId">The unique sender id.</param>
        /// <response code="200">OK</response>
        /// <response code="400">Validation error</response>
        /// <response code="401">Not Authorized</response>
        /// <response code="403">Access Denied error</response>
        /// <response code="404">The specified resource was not found</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/account/senders/{senderId}/resetpassword")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiAccountSendersSenderIdResetpasswordPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(Sender), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(DefaultError), description: "Validation error")]
        [SwaggerResponse(statusCode: 401, type: typeof(DefaultError), description: "Not Authorized")]
        [SwaggerResponse(statusCode: 403, type: typeof(DefaultError), description: "Access Denied error")]
        [SwaggerResponse(statusCode: 404, type: typeof(DefaultError), description: "The specified resource was not found")]
        [SwaggerResponse(statusCode: 0, type: typeof(DefaultError), description: "Unexpected error")]
        public virtual IActionResult ApiAccountSendersSenderIdResetpasswordPost([FromRoute][Required]string senderId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Sender));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(DefaultError));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(DefaultError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(DefaultError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(DefaultError));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(DefaultError));
            string exampleJson = null;
            exampleJson = "{\n  \"lastName\" : \"lastName\",\n  \"data\" : {\n    \"key\" : { }\n  },\n  \"signature\" : {\n    \"handdrawn\" : \"handdrawn\",\n    \"textual\" : {\n      \"color\" : \"color\",\n      \"font\" : \"font\"\n    }\n  },\n  \"specialTypes\" : [ \"NOTARY\", \"NOTARY\" ],\n  \"language\" : \"language\",\n  \"type\" : \"REGULAR\",\n  \"title\" : \"title\",\n  \"memberships\" : [ {\n    \"groupName\" : \"groupName\",\n    \"groupId\" : \"groupId\",\n    \"memberType\" : \"REGULAR\"\n  }, {\n    \"groupName\" : \"groupName\",\n    \"groupId\" : \"groupId\",\n    \"memberType\" : \"REGULAR\"\n  } ],\n  \"professionalIdentityFields\" : [ {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ null, null ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"type\" : \"type\",\n    \"category\" : \"category\",\n    \"value\" : \"value\"\n  }, {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ null, null ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"type\" : \"type\",\n    \"category\" : \"category\",\n    \"value\" : \"value\"\n  } ],\n  \"userCustomFields\" : [ {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    } ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"value\" : \"value\"\n  }, {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"translations\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"language\" : \"language\",\n      \"id\" : \"id\"\n    } ],\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"value\" : \"value\"\n  } ],\n  \"company\" : \"company\",\n  \"id\" : \"id\",\n  \"locked\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"email\" : \"email\",\n  \"address\" : {\n    \"zipcode\" : \"zipcode\",\n    \"country\" : \"country\",\n    \"city\" : \"city\",\n    \"address2\" : \"address2\",\n    \"address1\" : \"address1\",\n    \"state\" : \"state\"\n  },\n  \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"firstName\" : \"firstName\",\n  \"external\" : {\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"provider\" : \"provider\",\n    \"id\" : \"id\",\n    \"providerName\" : \"providerName\"\n  },\n  \"phone\" : \"phone\",\n  \"name\" : \"name\",\n  \"timezoneId\" : \"timezoneId\",\n  \"hasDelegates\" : true,\n  \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"account\" : {\n    \"owner\" : \"owner\",\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"customFields\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\",\n      \"required\" : true\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\",\n      \"required\" : true\n    } ],\n    \"logoUrl\" : \"logoUrl\",\n    \"licenses\" : [ {\n      \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"transactions\" : [ {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      }, {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      } ],\n      \"plan\" : {\n        \"features\" : {\n          \"key\" : { }\n        },\n        \"quotas\" : [ {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        }, {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        } ],\n        \"original\" : \"original\",\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"contract\" : \"DAY\",\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : \"id\",\n        \"freeCycles\" : {\n          \"count\" : 5,\n          \"cycle\" : \"DAY\"\n        },\n        \"cycle\" : \"DAY\",\n        \"group\" : \"group\"\n      },\n      \"status\" : \"ACTIVE\"\n    }, {\n      \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"transactions\" : [ {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      }, {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      } ],\n      \"plan\" : {\n        \"features\" : {\n          \"key\" : { }\n        },\n        \"quotas\" : [ {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        }, {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        } ],\n        \"original\" : \"original\",\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"contract\" : \"DAY\",\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : \"id\",\n        \"freeCycles\" : {\n          \"count\" : 5,\n          \"cycle\" : \"DAY\"\n        },\n        \"cycle\" : \"DAY\",\n        \"group\" : \"group\"\n      },\n      \"status\" : \"ACTIVE\"\n    } ],\n    \"logoAltTextKey\" : \"logoAltTextKey\",\n    \"name\" : \"name\",\n    \"timezoneId\" : \"timezoneId\",\n    \"company\" : {\n      \"address\" : {\n        \"zipcode\" : \"zipcode\",\n        \"country\" : \"country\",\n        \"city\" : \"city\",\n        \"address2\" : \"address2\",\n        \"address1\" : \"address1\",\n        \"state\" : \"state\"\n      },\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"id\" : \"id\"\n    },\n    \"id\" : \"id\",\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"providers\" : {\n      \"documents\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"provides\" : \"provides\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"provides\" : \"provides\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      } ],\n      \"users\" : [ null, null ]\n    }\n  },\n  \"status\" : \"INVITED\",\n  \"activated\" : \"2000-01-23T04:56:07.000+00:00\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Sender>(exampleJson)
                        : default(Sender);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Deletes a user&#x27;s default signature image.
        /// </summary>
        /// <remarks>Deletes the image that is being used by a recipient as their default signature when signing a transaction.</remarks>
        /// <param name="senderId">The unique sender id.</param>
        /// <response code="200">OK</response>
        /// <response code="401">Not Authorized</response>
        /// <response code="0">Unexpected error</response>
        [HttpDelete]
        [Route("/api/account/senders/{senderId}/signature/image")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiAccountSendersSenderIdSignatureImageDelete")]
        [SwaggerResponse(statusCode: 401, type: typeof(DefaultError), description: "Not Authorized")]
        [SwaggerResponse(statusCode: 0, type: typeof(DefaultError), description: "Unexpected error")]
        public virtual IActionResult ApiAccountSendersSenderIdSignatureImageDelete([FromRoute][Required]string senderId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(DefaultError));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(DefaultError));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Retrieves a user&#x27;s default signature image.
        /// </summary>
        /// <remarks>Retrieves the image that is being used by a recipient as their default signature when signing a transaction.</remarks>
        /// <param name="senderId">The unique sender id.</param>
        /// <response code="200">OK</response>
        /// <response code="400">The specified resource was not found</response>
        /// <response code="401">Not Authorized</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/api/account/senders/{senderId}/signature/image")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiAccountSendersSenderIdSignatureImageGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(SignatureImage), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(DefaultError), description: "The specified resource was not found")]
        [SwaggerResponse(statusCode: 401, type: typeof(DefaultError), description: "Not Authorized")]
        [SwaggerResponse(statusCode: 0, type: typeof(DefaultError), description: "Unexpected error")]
        public virtual IActionResult ApiAccountSendersSenderIdSignatureImageGet([FromRoute][Required]string senderId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SignatureImage));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(DefaultError));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(DefaultError));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(DefaultError));
            string exampleJson = null;
            exampleJson = "{\n  \"fileName\" : \"fileName\",\n  \"mediaType\" : \"mediaType\",\n  \"content\" : \"PEJhc2UgNjQgSW1hZ2UgQmluYXJ5IERhdGE+\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SignatureImage>(exampleJson)
                        : default(SignatureImage);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

    }
}
