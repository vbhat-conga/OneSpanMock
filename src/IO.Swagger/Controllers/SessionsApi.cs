/*
 * ONESPAN SIGN API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.51
 * Contact: support@onespan.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class SessionsApiController : ControllerBase
    { 
        /// <summary>
        /// Retrieves the session object.
        /// </summary>
        /// <remarks>Retrieves the session object.</remarks>
        /// <response code="200">OK</response>
        /// <response code="401">Not Authorized</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/api/session")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiSessionGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(Session), description: "OK")]
        [SwaggerResponse(statusCode: 401, type: typeof(DefaultError), description: "Not Authorized")]
        [SwaggerResponse(statusCode: 0, type: typeof(DefaultError), description: "Unexpected error")]
        public virtual IActionResult ApiSessionGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Session));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(DefaultError));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(DefaultError));
            string exampleJson = null;
            exampleJson = "{\n  \"features\" : {\n    \"inboxFiltering\" : true,\n    \"smsAuth\" : true,\n    \"attachments\" : true,\n    \"notarize\" : true,\n    \"forceLogin\" : true,\n    \"fastTrack\" : true,\n    \"equifaxUsa\" : true,\n    \"customFields\" : true,\n    \"certificateSigning\" : true,\n    \"disableFooter\" : true,\n    \"mobileSigningCeremony\" : true,\n    \"evidenceSummary\" : true,\n    \"enableNewUi\" : true,\n    \"tamperSealEvidence\" : true,\n    \"showDocumentsPreview\" : true,\n    \"sendToMobile\" : true,\n    \"qrCode\" : true,\n    \"enableSignerUi\" : true,\n    \"emailDocumentsAndEvidenceSummary\" : true,\n    \"authenticatedInbox\" : true,\n    \"allowInPersonForAccountSenders\" : true,\n    \"allowUiSwitch\" : true,\n    \"mobileCapture\" : true,\n    \"conditionalFields\" : true,\n    \"preventConsentRemoval\" : true,\n    \"flattenSignerDocuments\" : true,\n    \"qnaAuth\" : true,\n    \"ofacBlacklist\" : true,\n    \"groups\" : true,\n    \"equifaxCanada\" : true,\n    \"geteWitnessRecording\" : true,\n    \"allowIntegration\" : true,\n    \"optionalSignature\" : true,\n    \"externalSignerVerification\" : true,\n    \"personalCertificateClient\" : true,\n    \"signerSso\" : true,\n    \"mobileSigningCeremonyTablet\" : true,\n    \"bulkSend\" : true,\n    \"maskResponse\" : true,\n    \"disableInPersonActivationEmail\" : true,\n    \"ssoLogin\" : true,\n    \"delegation\" : true,\n    \"encryptDocuments\" : true,\n    \"enforceAuth\" : true,\n    \"documentVisibility\" : true\n  },\n  \"delegationUser\" : {\n    \"expiryDate\" : \"expiryDate\",\n    \"firstName\" : \"firstName\",\n    \"lastName\" : \"lastName\",\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"name\" : \"name\",\n    \"id\" : \"id\",\n    \"sendEmailCopies\" : true,\n    \"email\" : \"email\",\n    \"startDate\" : \"startDate\"\n  },\n  \"restricted\" : true,\n  \"certificateSigning\" : true,\n  \"loginSessionTimeout\" : 0,\n  \"inPerson\" : true,\n  \"packages\" : [ \"packages\", \"packages\" ],\n  \"user\" : {\n    \"lastName\" : \"lastName\",\n    \"address\" : {\n      \"zipcode\" : \"zipcode\",\n      \"country\" : \"country\",\n      \"city\" : \"city\",\n      \"address2\" : \"address2\",\n      \"address1\" : \"address1\",\n      \"state\" : \"state\"\n    },\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"signature\" : {\n      \"handdrawn\" : \"handdrawn\",\n      \"textual\" : {\n        \"color\" : \"color\",\n        \"font\" : \"font\"\n      }\n    },\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"specialTypes\" : [ \"NOTARY\", \"NOTARY\" ],\n    \"language\" : \"language\",\n    \"title\" : \"title\",\n    \"professionalIdentityFields\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ null, null ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"type\" : \"type\",\n      \"category\" : \"category\",\n      \"value\" : \"value\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ null, null ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"type\" : \"type\",\n      \"category\" : \"category\",\n      \"value\" : \"value\"\n    } ],\n    \"firstName\" : \"firstName\",\n    \"external\" : {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"provider\" : \"provider\",\n      \"id\" : \"id\",\n      \"providerName\" : \"providerName\"\n    },\n    \"phone\" : \"phone\",\n    \"name\" : \"name\",\n    \"userCustomFields\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\"\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\"\n    } ],\n    \"timezoneId\" : \"timezoneId\",\n    \"company\" : \"company\",\n    \"id\" : \"id\",\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"email\" : \"email\"\n  },\n  \"support\" : {\n    \"phone\" : \"phone\",\n    \"email\" : \"email\"\n  },\n  \"account\" : {\n    \"owner\" : \"owner\",\n    \"data\" : {\n      \"key\" : { }\n    },\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"customFields\" : [ {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\",\n      \"required\" : true\n    }, {\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"translations\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"language\" : \"language\",\n        \"id\" : \"id\"\n      } ],\n      \"name\" : \"name\",\n      \"id\" : \"id\",\n      \"value\" : \"value\",\n      \"required\" : true\n    } ],\n    \"logoUrl\" : \"logoUrl\",\n    \"licenses\" : [ {\n      \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"transactions\" : [ {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      }, {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      } ],\n      \"plan\" : {\n        \"features\" : {\n          \"key\" : { }\n        },\n        \"quotas\" : [ {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        }, {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        } ],\n        \"original\" : \"original\",\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"contract\" : \"DAY\",\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : \"id\",\n        \"freeCycles\" : {\n          \"count\" : 5,\n          \"cycle\" : \"DAY\"\n        },\n        \"cycle\" : \"DAY\",\n        \"group\" : \"group\"\n      },\n      \"status\" : \"ACTIVE\"\n    }, {\n      \"paidUntil\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"transactions\" : [ {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      }, {\n        \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"price\" : {\n          \"amount\" : 0,\n          \"currency\" : {\n            \"data\" : {\n              \"key\" : { }\n            },\n            \"name\" : \"name\",\n            \"id\" : \"id\"\n          }\n        },\n        \"creditCard\" : {\n          \"number\" : \"number\",\n          \"cvv\" : \"cvv\",\n          \"name\" : \"name\",\n          \"expiration\" : {\n            \"month\" : 1,\n            \"year\" : 6\n          },\n          \"type\" : \"type\"\n        }\n      } ],\n      \"plan\" : {\n        \"features\" : {\n          \"key\" : { }\n        },\n        \"quotas\" : [ {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        }, {\n          \"scope\" : \"SENDER\",\n          \"limit\" : 5,\n          \"cycle\" : \"DAY\",\n          \"target\" : \"SIGNER\"\n        } ],\n        \"original\" : \"original\",\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"contract\" : \"DAY\",\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : \"id\",\n        \"freeCycles\" : {\n          \"count\" : 5,\n          \"cycle\" : \"DAY\"\n        },\n        \"cycle\" : \"DAY\",\n        \"group\" : \"group\"\n      },\n      \"status\" : \"ACTIVE\"\n    } ],\n    \"logoAltTextKey\" : \"logoAltTextKey\",\n    \"name\" : \"name\",\n    \"timezoneId\" : \"timezoneId\",\n    \"company\" : {\n      \"address\" : {\n        \"zipcode\" : \"zipcode\",\n        \"country\" : \"country\",\n        \"city\" : \"city\",\n        \"address2\" : \"address2\",\n        \"address1\" : \"address1\",\n        \"state\" : \"state\"\n      },\n      \"data\" : {\n        \"key\" : { }\n      },\n      \"name\" : \"name\",\n      \"id\" : \"id\"\n    },\n    \"id\" : \"id\",\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"providers\" : {\n      \"documents\" : [ {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"provides\" : \"provides\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      }, {\n        \"data\" : {\n          \"key\" : { }\n        },\n        \"provides\" : \"provides\",\n        \"name\" : \"name\",\n        \"id\" : \"id\"\n      } ],\n      \"users\" : [ null, null ]\n    }\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Session>(exampleJson)
                        : default(Session);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
