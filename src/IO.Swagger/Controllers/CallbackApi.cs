/*
 * ONESPAN SIGN API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.51
 * Contact: support@onespan.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CallbackApiController : ControllerBase
    { 
        /// <summary>
        /// Retrieves a list of callbacks for a specified connector.
        /// </summary>
        /// <remarks>Retrieves a list of callbacks for a specified connector, such as a Sharepoint connector, or a Microsoft CRM connector.</remarks>
        /// <param name="origin">The origin name.&lt;/br&gt; &lt;/br&gt; Accepted values: &lt;ul&gt;   &lt;li&gt;dynamics&lt;/li&gt;   &lt;li&gt;sharepoint&lt;/li&gt;   &lt;li&gt;dynamics2011&lt;/li&gt;   &lt;li&gt;dynamics2013&lt;/li&gt;   &lt;li&gt;dynamics2015&lt;/li&gt;   &lt;li&gt;sharepoint2010&lt;/li&gt;   &lt;li&gt;sharepoint2013&lt;/li&gt;   &lt;li&gt;salesforceOauth2&lt;/li&gt; &lt;/ul&gt; Note that, when using the origin \&quot;salesforceOauth2\&quot;, the key field of the Callback object has a specific format.&lt;/br&gt; The base64 encoded string for the following JSON structure is expected in the key field.&lt;/br&gt; &lt;pre&gt;{   host: [salesforce oauth host],   client_id: [salesforce connected app client id]   refresh_token: [salesforce connected app refresh token], } &lt;/pre&gt; &lt;/br&gt; This is an example of a valid JSON structure for the key field:&lt;/br&gt; &lt;pre&gt;{   host: test.salesforce.com,   client_id: 3MVG9dKFWsESbpkGspAK561toINSmd9AamdH1sDWgAlbJ64auISbvJgFgWxFZeHgLnPL_Vx01H3HF.2wJl.Ho   refresh_token: 5Aep711qQZ.coqTldc0B64olflrLrsYa2Dgy6fc1FrS1WZ7gkJRjbtc9VPASWHat8s8LnRvHPtJczK6kHwUM35O, }&lt;/pre&gt; &lt;/br&gt; The base64 encoded string for the JSON example above would be (disregarding linebreaks): &lt;p style&#x3D;\&quot;font-family: monospace\&quot;&gt; ewogICJob3N0IjogImh0dHBzOi8vdGVzdC5zYWxlc2ZvcmNlLmNvbSIsCiAgI&lt;/br&gt; mNsaWVudF9pZCI6ICIzTVZHOWRLRldzRVNicGtHc3BBSzU2MXRvSU5TbWQ5QW&lt;/br&gt; FtZEgxc0RXZ0FsYko2NGF1SVNidkpnRmdXeEZaZUhnTG5QTF9WeDAxSDNIRi4&lt;/br&gt; yd0psLkhvIiwKICAicmVmcmVzaF90b2tlbiI6ICI1QWVwNzExcVFaLmNvcVRs&lt;/br&gt; ZGMwQjY0b2xmbHJMcnNZYTJEZ3k2ZmMxRnJTMVdaN2drSlJqYnRjOVZQQVNXS&lt;/br&gt; GF0OHM4TG5SdkhQdEpjeks2a0h3VU0zNU8iCn0&#x3D;&lt;/br&gt;&lt;/p&gt; This would be the actual string present in the key field. </param>
        /// <response code="200">OK</response>
        /// <response code="401">Not Authorized</response>
        /// <response code="404">The specified resource was not found</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/api/callback/connectors/{origin}")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiCallbackConnectorsOriginGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(Callback), description: "OK")]
        [SwaggerResponse(statusCode: 401, type: typeof(DefaultError), description: "Not Authorized")]
        [SwaggerResponse(statusCode: 404, type: typeof(DefaultError), description: "The specified resource was not found")]
        [SwaggerResponse(statusCode: 0, type: typeof(DefaultError), description: "Unexpected error")]
        public virtual IActionResult ApiCallbackConnectorsOriginGet([FromRoute][Required]string origin)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Callback));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(DefaultError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(DefaultError));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(DefaultError));
            string exampleJson = null;
            exampleJson = "{\n  \"events\" : [ \"DOCUMENT_SIGNED\", \"DOCUMENT_SIGNED\" ],\n  \"url\" : \"https://your-server.com/callback-path\",\n  \"key\" : \"key\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Callback>(exampleJson)
                        : default(Callback);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates a new callback for a specified connector.
        /// </summary>
        /// <remarks>Creates a new callback for a specified connector, such as a Sharepoint connector, or a Microsoft CRM connector.</remarks>
        /// <param name="body">Callback object.</param>
        /// <param name="origin">The origin name.&lt;/br&gt; &lt;/br&gt; Accepted values: &lt;ul&gt;   &lt;li&gt;dynamics&lt;/li&gt;   &lt;li&gt;sharepoint&lt;/li&gt;   &lt;li&gt;dynamics2011&lt;/li&gt;   &lt;li&gt;dynamics2013&lt;/li&gt;   &lt;li&gt;dynamics2015&lt;/li&gt;   &lt;li&gt;sharepoint2010&lt;/li&gt;   &lt;li&gt;sharepoint2013&lt;/li&gt;   &lt;li&gt;salesforceOauth2&lt;/li&gt; &lt;/ul&gt; Note that, when using the origin \&quot;salesforceOauth2\&quot;, the key field of the Callback object has a specific format.&lt;/br&gt; The base64 encoded string for the following JSON structure is expected in the key field.&lt;/br&gt; &lt;pre&gt;{   host: [salesforce oauth host],   client_id: [salesforce connected app client id]   refresh_token: [salesforce connected app refresh token], } &lt;/pre&gt; &lt;/br&gt; This is an example of a valid JSON structure for the key field:&lt;/br&gt; &lt;pre&gt;{   host: test.salesforce.com,   client_id: 3MVG9dKFWsESbpkGspAK561toINSmd9AamdH1sDWgAlbJ64auISbvJgFgWxFZeHgLnPL_Vx01H3HF.2wJl.Ho   refresh_token: 5Aep711qQZ.coqTldc0B64olflrLrsYa2Dgy6fc1FrS1WZ7gkJRjbtc9VPASWHat8s8LnRvHPtJczK6kHwUM35O, }&lt;/pre&gt; &lt;/br&gt; The base64 encoded string for the JSON example above would be (disregarding linebreaks): &lt;p style&#x3D;\&quot;font-family: monospace\&quot;&gt; ewogICJob3N0IjogImh0dHBzOi8vdGVzdC5zYWxlc2ZvcmNlLmNvbSIsCiAgI&lt;/br&gt; mNsaWVudF9pZCI6ICIzTVZHOWRLRldzRVNicGtHc3BBSzU2MXRvSU5TbWQ5QW&lt;/br&gt; FtZEgxc0RXZ0FsYko2NGF1SVNidkpnRmdXeEZaZUhnTG5QTF9WeDAxSDNIRi4&lt;/br&gt; yd0psLkhvIiwKICAicmVmcmVzaF90b2tlbiI6ICI1QWVwNzExcVFaLmNvcVRs&lt;/br&gt; ZGMwQjY0b2xmbHJMcnNZYTJEZ3k2ZmMxRnJTMVdaN2drSlJqYnRjOVZQQVNXS&lt;/br&gt; GF0OHM4TG5SdkhQdEpjeks2a0h3VU0zNU8iCn0&#x3D;&lt;/br&gt;&lt;/p&gt; This would be the actual string present in the key field. </param>
        /// <response code="200">OK</response>
        /// <response code="400">Validation error</response>
        /// <response code="401">Not Authorized</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/callback/connectors/{origin}")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiCallbackConnectorsOriginPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(Callback), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(DefaultError), description: "Validation error")]
        [SwaggerResponse(statusCode: 401, type: typeof(DefaultError), description: "Not Authorized")]
        [SwaggerResponse(statusCode: 0, type: typeof(DefaultError), description: "Unexpected error")]
        public virtual IActionResult ApiCallbackConnectorsOriginPost([FromBody]Callback body, [FromRoute][Required]string origin)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Callback));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(DefaultError));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(DefaultError));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(DefaultError));
            string exampleJson = null;
            exampleJson = "{\n  \"events\" : [ \"DOCUMENT_SIGNED\", \"DOCUMENT_SIGNED\" ],\n  \"url\" : \"https://your-server.com/callback-path\",\n  \"key\" : \"key\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Callback>(exampleJson)
                        : default(Callback);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Retrieves a list of all callbacks.
        /// </summary>
        /// <remarks>Callback event notifications allow you to be automatically notified of events pertaining to a package. Upon a specific event, the system will automatically call a specified URL.</remarks>
        /// <response code="200">OK</response>
        /// <response code="401">Not Authorized</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/api/callback")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiCallbackGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(Callback), description: "OK")]
        [SwaggerResponse(statusCode: 401, type: typeof(DefaultError), description: "Not Authorized")]
        [SwaggerResponse(statusCode: 0, type: typeof(DefaultError), description: "Unexpected error")]
        public virtual IActionResult ApiCallbackGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Callback));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(DefaultError));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(DefaultError));
            string exampleJson = null;
            exampleJson = "{\n  \"events\" : [ \"DOCUMENT_SIGNED\", \"DOCUMENT_SIGNED\" ],\n  \"url\" : \"https://your-server.com/callback-path\",\n  \"key\" : \"key\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Callback>(exampleJson)
                        : default(Callback);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates a new callback.
        /// </summary>
        /// <remarks>Callback event notifications allow you to be automatically notified of events pertaining to a package. Upon a specific event, the system will automatically call a specified URL.</remarks>
        /// <param name="body">Group information.</param>
        /// <response code="200">OK</response>
        /// <response code="401">Not Authorized</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/callback")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiCallbackPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(Callback), description: "OK")]
        [SwaggerResponse(statusCode: 401, type: typeof(DefaultError), description: "Not Authorized")]
        [SwaggerResponse(statusCode: 0, type: typeof(DefaultError), description: "Unexpected error")]
        public virtual IActionResult ApiCallbackPost([FromBody]Callback body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Callback));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(DefaultError));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(DefaultError));
            string exampleJson = null;
            exampleJson = "{\n  \"events\" : [ \"DOCUMENT_SIGNED\", \"DOCUMENT_SIGNED\" ],\n  \"url\" : \"https://your-server.com/callback-path\",\n  \"key\" : \"key\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Callback>(exampleJson)
                        : default(Callback);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
