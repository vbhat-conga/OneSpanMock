/*
 * ONESPAN SIGN API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.51
 * Contact: support@onespan.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class CompleteSummaryOptions : IEquatable<CompleteSummaryOptions>
    { 
        /// <summary>
        /// title
        /// </summary>
        /// <value>title</value>
        [Required]

        [DataMember(Name="title")]
        public bool? Title { get; set; }

        /// <summary>
        /// message
        /// </summary>
        /// <value>message</value>
        [Required]

        [DataMember(Name="message")]
        public bool? Message { get; set; }

        /// <summary>
        /// download
        /// </summary>
        /// <value>download</value>
        [Required]

        [DataMember(Name="download")]
        public bool? Download { get; set; }

        /// <summary>
        /// review
        /// </summary>
        /// <value>review</value>
        [Required]

        [DataMember(Name="review")]
        public bool? Review { get; set; }

        /// <summary>
        /// continue
        /// </summary>
        /// <value>continue</value>
        [Required]

        [DataMember(Name="continue")]
        public bool? _Continue { get; set; }

        /// <summary>
        /// documentSection
        /// </summary>
        /// <value>documentSection</value>
        [Required]

        [DataMember(Name="documentSection")]
        public bool? DocumentSection { get; set; }

        /// <summary>
        /// uploadSection
        /// </summary>
        /// <value>uploadSection</value>
        [Required]

        [DataMember(Name="uploadSection")]
        public bool? UploadSection { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompleteSummaryOptions {\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  Download: ").Append(Download).Append("\n");
            sb.Append("  Review: ").Append(Review).Append("\n");
            sb.Append("  _Continue: ").Append(_Continue).Append("\n");
            sb.Append("  DocumentSection: ").Append(DocumentSection).Append("\n");
            sb.Append("  UploadSection: ").Append(UploadSection).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((CompleteSummaryOptions)obj);
        }

        /// <summary>
        /// Returns true if CompleteSummaryOptions instances are equal
        /// </summary>
        /// <param name="other">Instance of CompleteSummaryOptions to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompleteSummaryOptions other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Title == other.Title ||
                    Title != null &&
                    Title.Equals(other.Title)
                ) && 
                (
                    Message == other.Message ||
                    Message != null &&
                    Message.Equals(other.Message)
                ) && 
                (
                    Download == other.Download ||
                    Download != null &&
                    Download.Equals(other.Download)
                ) && 
                (
                    Review == other.Review ||
                    Review != null &&
                    Review.Equals(other.Review)
                ) && 
                (
                    _Continue == other._Continue ||
                    _Continue != null &&
                    _Continue.Equals(other._Continue)
                ) && 
                (
                    DocumentSection == other.DocumentSection ||
                    DocumentSection != null &&
                    DocumentSection.Equals(other.DocumentSection)
                ) && 
                (
                    UploadSection == other.UploadSection ||
                    UploadSection != null &&
                    UploadSection.Equals(other.UploadSection)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Title != null)
                    hashCode = hashCode * 59 + Title.GetHashCode();
                    if (Message != null)
                    hashCode = hashCode * 59 + Message.GetHashCode();
                    if (Download != null)
                    hashCode = hashCode * 59 + Download.GetHashCode();
                    if (Review != null)
                    hashCode = hashCode * 59 + Review.GetHashCode();
                    if (_Continue != null)
                    hashCode = hashCode * 59 + _Continue.GetHashCode();
                    if (DocumentSection != null)
                    hashCode = hashCode * 59 + DocumentSection.GetHashCode();
                    if (UploadSection != null)
                    hashCode = hashCode * 59 + UploadSection.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(CompleteSummaryOptions left, CompleteSummaryOptions right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(CompleteSummaryOptions left, CompleteSummaryOptions right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
