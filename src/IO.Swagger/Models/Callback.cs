/*
 * ONESPAN SIGN API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.51
 * Contact: support@onespan.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class Callback : IEquatable<Callback>
    { 
        /// <summary>
        /// Gets or Sets Events
        /// </summary>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum EventsEnum
        {
            /// <summary>
            /// Enum DOCUMENTSIGNEDEnum for DOCUMENT_SIGNED
            /// </summary>
            [EnumMember(Value = "DOCUMENT_SIGNED")]
            DOCUMENTSIGNEDEnum = 0,
            /// <summary>
            /// Enum EMAILBOUNCEEnum for EMAIL_BOUNCE
            /// </summary>
            [EnumMember(Value = "EMAIL_BOUNCE")]
            EMAILBOUNCEEnum = 1,
            /// <summary>
            /// Enum KBAFAILUREEnum for KBA_FAILURE
            /// </summary>
            [EnumMember(Value = "KBA_FAILURE")]
            KBAFAILUREEnum = 2,
            /// <summary>
            /// Enum PACKAGEACTIVATEEnum for PACKAGE_ACTIVATE
            /// </summary>
            [EnumMember(Value = "PACKAGE_ACTIVATE")]
            PACKAGEACTIVATEEnum = 3,
            /// <summary>
            /// Enum PACKAGEARCHIVEEnum for PACKAGE_ARCHIVE
            /// </summary>
            [EnumMember(Value = "PACKAGE_ARCHIVE")]
            PACKAGEARCHIVEEnum = 4,
            /// <summary>
            /// Enum PACKAGEATTACHMENTEnum for PACKAGE_ATTACHMENT
            /// </summary>
            [EnumMember(Value = "PACKAGE_ATTACHMENT")]
            PACKAGEATTACHMENTEnum = 5,
            /// <summary>
            /// Enum PACKAGECOMPLETEEnum for PACKAGE_COMPLETE
            /// </summary>
            [EnumMember(Value = "PACKAGE_COMPLETE")]
            PACKAGECOMPLETEEnum = 6,
            /// <summary>
            /// Enum PACKAGECREATEEnum for PACKAGE_CREATE
            /// </summary>
            [EnumMember(Value = "PACKAGE_CREATE")]
            PACKAGECREATEEnum = 7,
            /// <summary>
            /// Enum PACKAGEDEACTIVATEEnum for PACKAGE_DEACTIVATE
            /// </summary>
            [EnumMember(Value = "PACKAGE_DEACTIVATE")]
            PACKAGEDEACTIVATEEnum = 8,
            /// <summary>
            /// Enum PACKAGEDECLINEEnum for PACKAGE_DECLINE
            /// </summary>
            [EnumMember(Value = "PACKAGE_DECLINE")]
            PACKAGEDECLINEEnum = 9,
            /// <summary>
            /// Enum PACKAGEDELETEEnum for PACKAGE_DELETE
            /// </summary>
            [EnumMember(Value = "PACKAGE_DELETE")]
            PACKAGEDELETEEnum = 10,
            /// <summary>
            /// Enum PACKAGEEXPIREEnum for PACKAGE_EXPIRE
            /// </summary>
            [EnumMember(Value = "PACKAGE_EXPIRE")]
            PACKAGEEXPIREEnum = 11,
            /// <summary>
            /// Enum PACKAGEOPTOUTEnum for PACKAGE_OPT_OUT
            /// </summary>
            [EnumMember(Value = "PACKAGE_OPT_OUT")]
            PACKAGEOPTOUTEnum = 12,
            /// <summary>
            /// Enum PACKAGEREADYFORCOMPLETEEnum for PACKAGE_READY_FOR_COMPLETE
            /// </summary>
            [EnumMember(Value = "PACKAGE_READY_FOR_COMPLETE")]
            PACKAGEREADYFORCOMPLETEEnum = 13,
            /// <summary>
            /// Enum PACKAGERESTOREEnum for PACKAGE_RESTORE
            /// </summary>
            [EnumMember(Value = "PACKAGE_RESTORE")]
            PACKAGERESTOREEnum = 14,
            /// <summary>
            /// Enum PACKAGETRASHEnum for PACKAGE_TRASH
            /// </summary>
            [EnumMember(Value = "PACKAGE_TRASH")]
            PACKAGETRASHEnum = 15,
            /// <summary>
            /// Enum ROLEREASSIGNEnum for ROLE_REASSIGN
            /// </summary>
            [EnumMember(Value = "ROLE_REASSIGN")]
            ROLEREASSIGNEnum = 16,
            /// <summary>
            /// Enum SIGNERCOMPLETEEnum for SIGNER_COMPLETE
            /// </summary>
            [EnumMember(Value = "SIGNER_COMPLETE")]
            SIGNERCOMPLETEEnum = 17,
            /// <summary>
            /// Enum SIGNERLOCKEDEnum for SIGNER_LOCKED
            /// </summary>
            [EnumMember(Value = "SIGNER_LOCKED")]
            SIGNERLOCKEDEnum = 18,
            /// <summary>
            /// Enum TEMPLATECREATEEnum for TEMPLATE_CREATE
            /// </summary>
            [EnumMember(Value = "TEMPLATE_CREATE")]
            TEMPLATECREATEEnum = 19        }

        /// <summary>
        /// Gets or Sets Events
        /// </summary>

        [DataMember(Name="events")]
        public List<EventsEnum> Events { get; set; }

        /// <summary>
        /// The url, you want to be called.
        /// </summary>
        /// <value>The url, you want to be called.</value>

        [DataMember(Name="url")]
        public string Url { get; set; }

        /// <summary>
        /// Unique callback key.
        /// </summary>
        /// <value>Unique callback key.</value>

        [DataMember(Name="key")]
        public string Key { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Callback {\n");
            sb.Append("  Events: ").Append(Events).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((Callback)obj);
        }

        /// <summary>
        /// Returns true if Callback instances are equal
        /// </summary>
        /// <param name="other">Instance of Callback to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Callback other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Events == other.Events ||
                    Events != null &&
                    Events.SequenceEqual(other.Events)
                ) && 
                (
                    Url == other.Url ||
                    Url != null &&
                    Url.Equals(other.Url)
                ) && 
                (
                    Key == other.Key ||
                    Key != null &&
                    Key.Equals(other.Key)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Events != null)
                    hashCode = hashCode * 59 + Events.GetHashCode();
                    if (Url != null)
                    hashCode = hashCode * 59 + Url.GetHashCode();
                    if (Key != null)
                    hashCode = hashCode * 59 + Key.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(Callback left, Callback right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(Callback left, Callback right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
