/*
 * ONESPAN SIGN API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.51
 * Contact: support@onespan.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class Features : IEquatable<Features>
    { 
        /// <summary>
        /// TamperSealEvidence
        /// </summary>
        /// <value>TamperSealEvidence</value>
        [Required]

        [DataMember(Name="tamperSealEvidence")]
        public bool? TamperSealEvidence { get; set; }

        /// <summary>
        /// Groups
        /// </summary>
        /// <value>Groups</value>
        [Required]

        [DataMember(Name="groups")]
        public bool? Groups { get; set; }

        /// <summary>
        /// QrCode
        /// </summary>
        /// <value>QrCode</value>
        [Required]

        [DataMember(Name="qrCode")]
        public bool? QrCode { get; set; }

        /// <summary>
        /// AuthenticatedInbox
        /// </summary>
        /// <value>AuthenticatedInbox</value>
        [Required]

        [DataMember(Name="authenticatedInbox")]
        public bool? AuthenticatedInbox { get; set; }

        /// <summary>
        /// Attachments
        /// </summary>
        /// <value>Attachments</value>
        [Required]

        [DataMember(Name="attachments")]
        public bool? Attachments { get; set; }

        /// <summary>
        /// EWitnessRecording
        /// </summary>
        /// <value>EWitnessRecording</value>
        [Required]

        [DataMember(Name="geteWitnessRecording")]
        public bool? GeteWitnessRecording { get; set; }

        /// <summary>
        /// FlattenSignerDocuments
        /// </summary>
        /// <value>FlattenSignerDocuments</value>
        [Required]

        [DataMember(Name="flattenSignerDocuments")]
        public bool? FlattenSignerDocuments { get; set; }

        /// <summary>
        /// Delegation
        /// </summary>
        /// <value>Delegation</value>
        [Required]

        [DataMember(Name="delegation")]
        public bool? Delegation { get; set; }

        /// <summary>
        /// EncryptDocuments
        /// </summary>
        /// <value>EncryptDocuments</value>
        [Required]

        [DataMember(Name="encryptDocuments")]
        public bool? EncryptDocuments { get; set; }

        /// <summary>
        /// DocumentVisibility
        /// </summary>
        /// <value>DocumentVisibility</value>
        [Required]

        [DataMember(Name="documentVisibility")]
        public bool? DocumentVisibility { get; set; }

        /// <summary>
        /// CustomFields
        /// </summary>
        /// <value>CustomFields</value>
        [Required]

        [DataMember(Name="customFields")]
        public bool? CustomFields { get; set; }

        /// <summary>
        /// SendToMobile
        /// </summary>
        /// <value>SendToMobile</value>
        [Required]

        [DataMember(Name="sendToMobile")]
        public bool? SendToMobile { get; set; }

        /// <summary>
        /// OptionalSignature
        /// </summary>
        /// <value>OptionalSignature</value>
        [Required]

        [DataMember(Name="optionalSignature")]
        public bool? OptionalSignature { get; set; }

        /// <summary>
        /// CertificateSigning
        /// </summary>
        /// <value>CertificateSigning</value>
        [Required]

        [DataMember(Name="certificateSigning")]
        public bool? CertificateSigning { get; set; }

        /// <summary>
        /// EvidenceSummary
        /// </summary>
        /// <value>EvidenceSummary</value>
        [Required]

        [DataMember(Name="evidenceSummary")]
        public bool? EvidenceSummary { get; set; }

        /// <summary>
        /// FastTrack
        /// </summary>
        /// <value>FastTrack</value>
        [Required]

        [DataMember(Name="fastTrack")]
        public bool? FastTrack { get; set; }

        /// <summary>
        /// ForceLogin
        /// </summary>
        /// <value>ForceLogin</value>
        [Required]

        [DataMember(Name="forceLogin")]
        public bool? ForceLogin { get; set; }

        /// <summary>
        /// InboxFiltering
        /// </summary>
        /// <value>InboxFiltering</value>
        [Required]

        [DataMember(Name="inboxFiltering")]
        public bool? InboxFiltering { get; set; }

        /// <summary>
        /// Notarize
        /// </summary>
        /// <value>Notarize</value>
        [Required]

        [DataMember(Name="notarize")]
        public bool? Notarize { get; set; }

        /// <summary>
        /// ShowDocumentsPreview
        /// </summary>
        /// <value>ShowDocumentsPreview</value>
        [Required]

        [DataMember(Name="showDocumentsPreview")]
        public bool? ShowDocumentsPreview { get; set; }

        /// <summary>
        /// equifaxCanada
        /// </summary>
        /// <value>equifaxCanada</value>
        [Required]

        [DataMember(Name="equifaxCanada")]
        public bool? EquifaxCanada { get; set; }

        /// <summary>
        /// equifaxUsa
        /// </summary>
        /// <value>equifaxUsa</value>
        [Required]

        [DataMember(Name="equifaxUsa")]
        public bool? EquifaxUsa { get; set; }

        /// <summary>
        /// smsAuth
        /// </summary>
        /// <value>smsAuth</value>
        [Required]

        [DataMember(Name="smsAuth")]
        public bool? SmsAuth { get; set; }

        /// <summary>
        /// qnaAuth
        /// </summary>
        /// <value>qnaAuth</value>
        [Required]

        [DataMember(Name="qnaAuth")]
        public bool? QnaAuth { get; set; }

        /// <summary>
        /// enforceAuth
        /// </summary>
        /// <value>enforceAuth</value>
        [Required]

        [DataMember(Name="enforceAuth")]
        public bool? EnforceAuth { get; set; }

        /// <summary>
        /// ofacBlacklist
        /// </summary>
        /// <value>ofacBlacklist</value>
        [Required]

        [DataMember(Name="ofacBlacklist")]
        public bool? OfacBlacklist { get; set; }

        /// <summary>
        /// MobileCapture
        /// </summary>
        /// <value>MobileCapture</value>
        [Required]

        [DataMember(Name="mobileCapture")]
        public bool? MobileCapture { get; set; }

        /// <summary>
        /// MaskResponse
        /// </summary>
        /// <value>MaskResponse</value>
        [Required]

        [DataMember(Name="maskResponse")]
        public bool? MaskResponse { get; set; }

        /// <summary>
        /// AllowInPersonForAccountSenders
        /// </summary>
        /// <value>AllowInPersonForAccountSenders</value>
        [Required]

        [DataMember(Name="allowInPersonForAccountSenders")]
        public bool? AllowInPersonForAccountSenders { get; set; }

        /// <summary>
        /// MobileSigningCeremony
        /// </summary>
        /// <value>MobileSigningCeremony</value>
        [Required]

        [DataMember(Name="mobileSigningCeremony")]
        public bool? MobileSigningCeremony { get; set; }

        /// <summary>
        /// MobileSigningCeremonyTablet
        /// </summary>
        /// <value>MobileSigningCeremonyTablet</value>
        [Required]

        [DataMember(Name="mobileSigningCeremonyTablet")]
        public bool? MobileSigningCeremonyTablet { get; set; }

        /// <summary>
        /// DisableInPersonActivationEmail
        /// </summary>
        /// <value>DisableInPersonActivationEmail</value>
        [Required]

        [DataMember(Name="disableInPersonActivationEmail")]
        public bool? DisableInPersonActivationEmail { get; set; }

        /// <summary>
        /// EmailDocumentsAndEvidenceSummary
        /// </summary>
        /// <value>EmailDocumentsAndEvidenceSummary</value>
        [Required]

        [DataMember(Name="emailDocumentsAndEvidenceSummary")]
        public bool? EmailDocumentsAndEvidenceSummary { get; set; }

        /// <summary>
        /// BulkSend
        /// </summary>
        /// <value>BulkSend</value>
        [Required]

        [DataMember(Name="bulkSend")]
        public bool? BulkSend { get; set; }

        /// <summary>
        /// SsoLogin
        /// </summary>
        /// <value>SsoLogin</value>
        [Required]

        [DataMember(Name="ssoLogin")]
        public bool? SsoLogin { get; set; }

        /// <summary>
        /// SignerSso
        /// </summary>
        /// <value>SignerSso</value>
        [Required]

        [DataMember(Name="signerSso")]
        public bool? SignerSso { get; set; }

        /// <summary>
        /// AllowUiSwitch
        /// </summary>
        /// <value>AllowUiSwitch</value>
        [Required]

        [DataMember(Name="allowUiSwitch")]
        public bool? AllowUiSwitch { get; set; }

        /// <summary>
        /// EnableNewUi
        /// </summary>
        /// <value>EnableNewUi</value>
        [Required]

        [DataMember(Name="enableNewUi")]
        public bool? EnableNewUi { get; set; }

        /// <summary>
        /// EnableSignerUi
        /// </summary>
        /// <value>EnableSignerUi</value>
        [Required]

        [DataMember(Name="enableSignerUi")]
        public bool? EnableSignerUi { get; set; }

        /// <summary>
        /// DisableFooter
        /// </summary>
        /// <value>DisableFooter</value>
        [Required]

        [DataMember(Name="disableFooter")]
        public bool? DisableFooter { get; set; }

        /// <summary>
        /// ExternalSignerVerification
        /// </summary>
        /// <value>ExternalSignerVerification</value>
        [Required]

        [DataMember(Name="externalSignerVerification")]
        public bool? ExternalSignerVerification { get; set; }

        /// <summary>
        /// PersonalCertificateClient
        /// </summary>
        /// <value>PersonalCertificateClient</value>
        [Required]

        [DataMember(Name="personalCertificateClient")]
        public bool? PersonalCertificateClient { get; set; }

        /// <summary>
        /// AllowIntegration
        /// </summary>
        /// <value>AllowIntegration</value>
        [Required]

        [DataMember(Name="allowIntegration")]
        public bool? AllowIntegration { get; set; }

        /// <summary>
        /// PreventConsentRemoval
        /// </summary>
        /// <value>PreventConsentRemoval</value>
        [Required]

        [DataMember(Name="preventConsentRemoval")]
        public bool? PreventConsentRemoval { get; set; }

        /// <summary>
        /// ConditionalFields
        /// </summary>
        /// <value>ConditionalFields</value>
        [Required]

        [DataMember(Name="conditionalFields")]
        public bool? ConditionalFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Features {\n");
            sb.Append("  TamperSealEvidence: ").Append(TamperSealEvidence).Append("\n");
            sb.Append("  Groups: ").Append(Groups).Append("\n");
            sb.Append("  QrCode: ").Append(QrCode).Append("\n");
            sb.Append("  AuthenticatedInbox: ").Append(AuthenticatedInbox).Append("\n");
            sb.Append("  Attachments: ").Append(Attachments).Append("\n");
            sb.Append("  GeteWitnessRecording: ").Append(GeteWitnessRecording).Append("\n");
            sb.Append("  FlattenSignerDocuments: ").Append(FlattenSignerDocuments).Append("\n");
            sb.Append("  Delegation: ").Append(Delegation).Append("\n");
            sb.Append("  EncryptDocuments: ").Append(EncryptDocuments).Append("\n");
            sb.Append("  DocumentVisibility: ").Append(DocumentVisibility).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("  SendToMobile: ").Append(SendToMobile).Append("\n");
            sb.Append("  OptionalSignature: ").Append(OptionalSignature).Append("\n");
            sb.Append("  CertificateSigning: ").Append(CertificateSigning).Append("\n");
            sb.Append("  EvidenceSummary: ").Append(EvidenceSummary).Append("\n");
            sb.Append("  FastTrack: ").Append(FastTrack).Append("\n");
            sb.Append("  ForceLogin: ").Append(ForceLogin).Append("\n");
            sb.Append("  InboxFiltering: ").Append(InboxFiltering).Append("\n");
            sb.Append("  Notarize: ").Append(Notarize).Append("\n");
            sb.Append("  ShowDocumentsPreview: ").Append(ShowDocumentsPreview).Append("\n");
            sb.Append("  EquifaxCanada: ").Append(EquifaxCanada).Append("\n");
            sb.Append("  EquifaxUsa: ").Append(EquifaxUsa).Append("\n");
            sb.Append("  SmsAuth: ").Append(SmsAuth).Append("\n");
            sb.Append("  QnaAuth: ").Append(QnaAuth).Append("\n");
            sb.Append("  EnforceAuth: ").Append(EnforceAuth).Append("\n");
            sb.Append("  OfacBlacklist: ").Append(OfacBlacklist).Append("\n");
            sb.Append("  MobileCapture: ").Append(MobileCapture).Append("\n");
            sb.Append("  MaskResponse: ").Append(MaskResponse).Append("\n");
            sb.Append("  AllowInPersonForAccountSenders: ").Append(AllowInPersonForAccountSenders).Append("\n");
            sb.Append("  MobileSigningCeremony: ").Append(MobileSigningCeremony).Append("\n");
            sb.Append("  MobileSigningCeremonyTablet: ").Append(MobileSigningCeremonyTablet).Append("\n");
            sb.Append("  DisableInPersonActivationEmail: ").Append(DisableInPersonActivationEmail).Append("\n");
            sb.Append("  EmailDocumentsAndEvidenceSummary: ").Append(EmailDocumentsAndEvidenceSummary).Append("\n");
            sb.Append("  BulkSend: ").Append(BulkSend).Append("\n");
            sb.Append("  SsoLogin: ").Append(SsoLogin).Append("\n");
            sb.Append("  SignerSso: ").Append(SignerSso).Append("\n");
            sb.Append("  AllowUiSwitch: ").Append(AllowUiSwitch).Append("\n");
            sb.Append("  EnableNewUi: ").Append(EnableNewUi).Append("\n");
            sb.Append("  EnableSignerUi: ").Append(EnableSignerUi).Append("\n");
            sb.Append("  DisableFooter: ").Append(DisableFooter).Append("\n");
            sb.Append("  ExternalSignerVerification: ").Append(ExternalSignerVerification).Append("\n");
            sb.Append("  PersonalCertificateClient: ").Append(PersonalCertificateClient).Append("\n");
            sb.Append("  AllowIntegration: ").Append(AllowIntegration).Append("\n");
            sb.Append("  PreventConsentRemoval: ").Append(PreventConsentRemoval).Append("\n");
            sb.Append("  ConditionalFields: ").Append(ConditionalFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((Features)obj);
        }

        /// <summary>
        /// Returns true if Features instances are equal
        /// </summary>
        /// <param name="other">Instance of Features to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Features other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    TamperSealEvidence == other.TamperSealEvidence ||
                    TamperSealEvidence != null &&
                    TamperSealEvidence.Equals(other.TamperSealEvidence)
                ) && 
                (
                    Groups == other.Groups ||
                    Groups != null &&
                    Groups.Equals(other.Groups)
                ) && 
                (
                    QrCode == other.QrCode ||
                    QrCode != null &&
                    QrCode.Equals(other.QrCode)
                ) && 
                (
                    AuthenticatedInbox == other.AuthenticatedInbox ||
                    AuthenticatedInbox != null &&
                    AuthenticatedInbox.Equals(other.AuthenticatedInbox)
                ) && 
                (
                    Attachments == other.Attachments ||
                    Attachments != null &&
                    Attachments.Equals(other.Attachments)
                ) && 
                (
                    GeteWitnessRecording == other.GeteWitnessRecording ||
                    GeteWitnessRecording != null &&
                    GeteWitnessRecording.Equals(other.GeteWitnessRecording)
                ) && 
                (
                    FlattenSignerDocuments == other.FlattenSignerDocuments ||
                    FlattenSignerDocuments != null &&
                    FlattenSignerDocuments.Equals(other.FlattenSignerDocuments)
                ) && 
                (
                    Delegation == other.Delegation ||
                    Delegation != null &&
                    Delegation.Equals(other.Delegation)
                ) && 
                (
                    EncryptDocuments == other.EncryptDocuments ||
                    EncryptDocuments != null &&
                    EncryptDocuments.Equals(other.EncryptDocuments)
                ) && 
                (
                    DocumentVisibility == other.DocumentVisibility ||
                    DocumentVisibility != null &&
                    DocumentVisibility.Equals(other.DocumentVisibility)
                ) && 
                (
                    CustomFields == other.CustomFields ||
                    CustomFields != null &&
                    CustomFields.Equals(other.CustomFields)
                ) && 
                (
                    SendToMobile == other.SendToMobile ||
                    SendToMobile != null &&
                    SendToMobile.Equals(other.SendToMobile)
                ) && 
                (
                    OptionalSignature == other.OptionalSignature ||
                    OptionalSignature != null &&
                    OptionalSignature.Equals(other.OptionalSignature)
                ) && 
                (
                    CertificateSigning == other.CertificateSigning ||
                    CertificateSigning != null &&
                    CertificateSigning.Equals(other.CertificateSigning)
                ) && 
                (
                    EvidenceSummary == other.EvidenceSummary ||
                    EvidenceSummary != null &&
                    EvidenceSummary.Equals(other.EvidenceSummary)
                ) && 
                (
                    FastTrack == other.FastTrack ||
                    FastTrack != null &&
                    FastTrack.Equals(other.FastTrack)
                ) && 
                (
                    ForceLogin == other.ForceLogin ||
                    ForceLogin != null &&
                    ForceLogin.Equals(other.ForceLogin)
                ) && 
                (
                    InboxFiltering == other.InboxFiltering ||
                    InboxFiltering != null &&
                    InboxFiltering.Equals(other.InboxFiltering)
                ) && 
                (
                    Notarize == other.Notarize ||
                    Notarize != null &&
                    Notarize.Equals(other.Notarize)
                ) && 
                (
                    ShowDocumentsPreview == other.ShowDocumentsPreview ||
                    ShowDocumentsPreview != null &&
                    ShowDocumentsPreview.Equals(other.ShowDocumentsPreview)
                ) && 
                (
                    EquifaxCanada == other.EquifaxCanada ||
                    EquifaxCanada != null &&
                    EquifaxCanada.Equals(other.EquifaxCanada)
                ) && 
                (
                    EquifaxUsa == other.EquifaxUsa ||
                    EquifaxUsa != null &&
                    EquifaxUsa.Equals(other.EquifaxUsa)
                ) && 
                (
                    SmsAuth == other.SmsAuth ||
                    SmsAuth != null &&
                    SmsAuth.Equals(other.SmsAuth)
                ) && 
                (
                    QnaAuth == other.QnaAuth ||
                    QnaAuth != null &&
                    QnaAuth.Equals(other.QnaAuth)
                ) && 
                (
                    EnforceAuth == other.EnforceAuth ||
                    EnforceAuth != null &&
                    EnforceAuth.Equals(other.EnforceAuth)
                ) && 
                (
                    OfacBlacklist == other.OfacBlacklist ||
                    OfacBlacklist != null &&
                    OfacBlacklist.Equals(other.OfacBlacklist)
                ) && 
                (
                    MobileCapture == other.MobileCapture ||
                    MobileCapture != null &&
                    MobileCapture.Equals(other.MobileCapture)
                ) && 
                (
                    MaskResponse == other.MaskResponse ||
                    MaskResponse != null &&
                    MaskResponse.Equals(other.MaskResponse)
                ) && 
                (
                    AllowInPersonForAccountSenders == other.AllowInPersonForAccountSenders ||
                    AllowInPersonForAccountSenders != null &&
                    AllowInPersonForAccountSenders.Equals(other.AllowInPersonForAccountSenders)
                ) && 
                (
                    MobileSigningCeremony == other.MobileSigningCeremony ||
                    MobileSigningCeremony != null &&
                    MobileSigningCeremony.Equals(other.MobileSigningCeremony)
                ) && 
                (
                    MobileSigningCeremonyTablet == other.MobileSigningCeremonyTablet ||
                    MobileSigningCeremonyTablet != null &&
                    MobileSigningCeremonyTablet.Equals(other.MobileSigningCeremonyTablet)
                ) && 
                (
                    DisableInPersonActivationEmail == other.DisableInPersonActivationEmail ||
                    DisableInPersonActivationEmail != null &&
                    DisableInPersonActivationEmail.Equals(other.DisableInPersonActivationEmail)
                ) && 
                (
                    EmailDocumentsAndEvidenceSummary == other.EmailDocumentsAndEvidenceSummary ||
                    EmailDocumentsAndEvidenceSummary != null &&
                    EmailDocumentsAndEvidenceSummary.Equals(other.EmailDocumentsAndEvidenceSummary)
                ) && 
                (
                    BulkSend == other.BulkSend ||
                    BulkSend != null &&
                    BulkSend.Equals(other.BulkSend)
                ) && 
                (
                    SsoLogin == other.SsoLogin ||
                    SsoLogin != null &&
                    SsoLogin.Equals(other.SsoLogin)
                ) && 
                (
                    SignerSso == other.SignerSso ||
                    SignerSso != null &&
                    SignerSso.Equals(other.SignerSso)
                ) && 
                (
                    AllowUiSwitch == other.AllowUiSwitch ||
                    AllowUiSwitch != null &&
                    AllowUiSwitch.Equals(other.AllowUiSwitch)
                ) && 
                (
                    EnableNewUi == other.EnableNewUi ||
                    EnableNewUi != null &&
                    EnableNewUi.Equals(other.EnableNewUi)
                ) && 
                (
                    EnableSignerUi == other.EnableSignerUi ||
                    EnableSignerUi != null &&
                    EnableSignerUi.Equals(other.EnableSignerUi)
                ) && 
                (
                    DisableFooter == other.DisableFooter ||
                    DisableFooter != null &&
                    DisableFooter.Equals(other.DisableFooter)
                ) && 
                (
                    ExternalSignerVerification == other.ExternalSignerVerification ||
                    ExternalSignerVerification != null &&
                    ExternalSignerVerification.Equals(other.ExternalSignerVerification)
                ) && 
                (
                    PersonalCertificateClient == other.PersonalCertificateClient ||
                    PersonalCertificateClient != null &&
                    PersonalCertificateClient.Equals(other.PersonalCertificateClient)
                ) && 
                (
                    AllowIntegration == other.AllowIntegration ||
                    AllowIntegration != null &&
                    AllowIntegration.Equals(other.AllowIntegration)
                ) && 
                (
                    PreventConsentRemoval == other.PreventConsentRemoval ||
                    PreventConsentRemoval != null &&
                    PreventConsentRemoval.Equals(other.PreventConsentRemoval)
                ) && 
                (
                    ConditionalFields == other.ConditionalFields ||
                    ConditionalFields != null &&
                    ConditionalFields.Equals(other.ConditionalFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (TamperSealEvidence != null)
                    hashCode = hashCode * 59 + TamperSealEvidence.GetHashCode();
                    if (Groups != null)
                    hashCode = hashCode * 59 + Groups.GetHashCode();
                    if (QrCode != null)
                    hashCode = hashCode * 59 + QrCode.GetHashCode();
                    if (AuthenticatedInbox != null)
                    hashCode = hashCode * 59 + AuthenticatedInbox.GetHashCode();
                    if (Attachments != null)
                    hashCode = hashCode * 59 + Attachments.GetHashCode();
                    if (GeteWitnessRecording != null)
                    hashCode = hashCode * 59 + GeteWitnessRecording.GetHashCode();
                    if (FlattenSignerDocuments != null)
                    hashCode = hashCode * 59 + FlattenSignerDocuments.GetHashCode();
                    if (Delegation != null)
                    hashCode = hashCode * 59 + Delegation.GetHashCode();
                    if (EncryptDocuments != null)
                    hashCode = hashCode * 59 + EncryptDocuments.GetHashCode();
                    if (DocumentVisibility != null)
                    hashCode = hashCode * 59 + DocumentVisibility.GetHashCode();
                    if (CustomFields != null)
                    hashCode = hashCode * 59 + CustomFields.GetHashCode();
                    if (SendToMobile != null)
                    hashCode = hashCode * 59 + SendToMobile.GetHashCode();
                    if (OptionalSignature != null)
                    hashCode = hashCode * 59 + OptionalSignature.GetHashCode();
                    if (CertificateSigning != null)
                    hashCode = hashCode * 59 + CertificateSigning.GetHashCode();
                    if (EvidenceSummary != null)
                    hashCode = hashCode * 59 + EvidenceSummary.GetHashCode();
                    if (FastTrack != null)
                    hashCode = hashCode * 59 + FastTrack.GetHashCode();
                    if (ForceLogin != null)
                    hashCode = hashCode * 59 + ForceLogin.GetHashCode();
                    if (InboxFiltering != null)
                    hashCode = hashCode * 59 + InboxFiltering.GetHashCode();
                    if (Notarize != null)
                    hashCode = hashCode * 59 + Notarize.GetHashCode();
                    if (ShowDocumentsPreview != null)
                    hashCode = hashCode * 59 + ShowDocumentsPreview.GetHashCode();
                    if (EquifaxCanada != null)
                    hashCode = hashCode * 59 + EquifaxCanada.GetHashCode();
                    if (EquifaxUsa != null)
                    hashCode = hashCode * 59 + EquifaxUsa.GetHashCode();
                    if (SmsAuth != null)
                    hashCode = hashCode * 59 + SmsAuth.GetHashCode();
                    if (QnaAuth != null)
                    hashCode = hashCode * 59 + QnaAuth.GetHashCode();
                    if (EnforceAuth != null)
                    hashCode = hashCode * 59 + EnforceAuth.GetHashCode();
                    if (OfacBlacklist != null)
                    hashCode = hashCode * 59 + OfacBlacklist.GetHashCode();
                    if (MobileCapture != null)
                    hashCode = hashCode * 59 + MobileCapture.GetHashCode();
                    if (MaskResponse != null)
                    hashCode = hashCode * 59 + MaskResponse.GetHashCode();
                    if (AllowInPersonForAccountSenders != null)
                    hashCode = hashCode * 59 + AllowInPersonForAccountSenders.GetHashCode();
                    if (MobileSigningCeremony != null)
                    hashCode = hashCode * 59 + MobileSigningCeremony.GetHashCode();
                    if (MobileSigningCeremonyTablet != null)
                    hashCode = hashCode * 59 + MobileSigningCeremonyTablet.GetHashCode();
                    if (DisableInPersonActivationEmail != null)
                    hashCode = hashCode * 59 + DisableInPersonActivationEmail.GetHashCode();
                    if (EmailDocumentsAndEvidenceSummary != null)
                    hashCode = hashCode * 59 + EmailDocumentsAndEvidenceSummary.GetHashCode();
                    if (BulkSend != null)
                    hashCode = hashCode * 59 + BulkSend.GetHashCode();
                    if (SsoLogin != null)
                    hashCode = hashCode * 59 + SsoLogin.GetHashCode();
                    if (SignerSso != null)
                    hashCode = hashCode * 59 + SignerSso.GetHashCode();
                    if (AllowUiSwitch != null)
                    hashCode = hashCode * 59 + AllowUiSwitch.GetHashCode();
                    if (EnableNewUi != null)
                    hashCode = hashCode * 59 + EnableNewUi.GetHashCode();
                    if (EnableSignerUi != null)
                    hashCode = hashCode * 59 + EnableSignerUi.GetHashCode();
                    if (DisableFooter != null)
                    hashCode = hashCode * 59 + DisableFooter.GetHashCode();
                    if (ExternalSignerVerification != null)
                    hashCode = hashCode * 59 + ExternalSignerVerification.GetHashCode();
                    if (PersonalCertificateClient != null)
                    hashCode = hashCode * 59 + PersonalCertificateClient.GetHashCode();
                    if (AllowIntegration != null)
                    hashCode = hashCode * 59 + AllowIntegration.GetHashCode();
                    if (PreventConsentRemoval != null)
                    hashCode = hashCode * 59 + PreventConsentRemoval.GetHashCode();
                    if (ConditionalFields != null)
                    hashCode = hashCode * 59 + ConditionalFields.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(Features left, Features right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(Features left, Features right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
